<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:notation="http://www.eclipse.org/gmf/runtime/1.0.2/notation" xmlns:tooldataform.browser="http:///tooldataform/browser.ecore" xmlns:tooldataform.pmoo="http:///tooldataform/pmoo.ecore" xmlns:tooldataform.ui="http:///tooldataform/ui.ecore" xsi:schemaLocation="http:///tooldataform/browser.ecore http:///tooldataform.ecore#//browser http:///tooldataform/pmoo.ecore http:///tooldataform.ecore#//pmoo http:///tooldataform/ui.ecore http:///tooldataform.ecore#//ui">
  <tooldataform.ui:UI_Diagram xmi:id="_yG2GwNSrEeyDluTmCDBPEQ" name="ViewPart: CotizacionBase">
    <theUserInterface xmi:type="tooldataform.ui:UserInterface" xmi:id="_yG5KENSrEeyDluTmCDBPEQ" name="CotizacionBase" nameVar="CotizacionBase" documentation="package cotizacion.view.views;&#xA;import cotizacion.ui.UiPackage.Literals;&#xA;import org.eclipse.swt.custom.ScrolledComposite;&#xA;import cotizacion.ModelFactory;&#xA;import cotizacion.ui.*;&#xA;import cotizacion.ModelFactory;&#xA;import cotizacion.ui.viewmodels.contenedorcotizacionbaseviewmodel.*;&#xA;import cotizacion.view.model.ModelFactoryModel;&#xA;import org.eclipse.wb.swt.SWTResourceManager;&#xA;import org.eclipse.ui.part.ViewPart;&#xA;import org.eclipse.jface.viewers.ISelectionChangedListener;&#xA;import org.eclipse.jface.viewers.IStructuredContentProvider;&#xA;import org.eclipse.jface.viewers.IStructuredSelection;&#xA;import org.eclipse.jface.action.MenuManager;&#xA;import org.eclipse.jface.action.StatusLineManager;&#xA;import org.eclipse.jface.action.ToolBarManager;&#xA;import org.eclipse.jface.window.ApplicationWindow;&#xA;import org.eclipse.swt.SWT;&#xA;import org.eclipse.swt.graphics.Point;&#xA;import org.eclipse.swt.widgets.Composite;&#xA;import org.eclipse.swt.widgets.Control;&#xA;import org.eclipse.swt.widgets.Display;&#xA;import org.eclipse.swt.widgets.Shell;&#xA;import org.eclipse.swt.widgets.Group;&#xA;import org.eclipse.swt.widgets.Table;&#xA;import org.eclipse.jface.viewers.TableViewer;&#xA;import org.eclipse.swt.widgets.TableColumn;&#xA;import org.eclipse.jface.viewers.TableViewerColumn;&#xA;import org.eclipse.swt.widgets.Combo;&#xA;import org.eclipse.jface.viewers.TreeViewer;import org.eclipse.jface.viewers.ComboViewer;&#xA;import org.eclipse.ui.forms.widgets.FormToolkit;&#xA;import org.eclipse.swt.widgets.Label;&#xA;import org.eclipse.swt.widgets.Text;&#xA;import org.eclipse.swt.widgets.Button;&#xA;import org.eclipse.swt.events.SelectionAdapter;&#xA;import org.eclipse.swt.events.SelectionEvent;&#xA;import org.eclipse.swt.events.ModifyListener;&#xA;import org.eclipse.swt.events.ModifyEvent;&#xA;import org.eclipse.swt.widgets.DateTime;&#xA;&#xA;import org.eclipse.core.databinding.DataBindingContext;&#xA;import org.eclipse.jface.databinding.viewers.ObservableListContentProvider;&#xA;import org.eclipse.core.databinding.observable.map.IObservableMap;&#xA;import org.eclipse.emf.databinding.EMFObservables;&#xA;import org.eclipse.emf.ecore.EStructuralFeature;&#xA;import org.eclipse.jface.databinding.viewers.ObservableMapLabelProvider;&#xA;import org.eclipse.core.databinding.observable.list.IObservableList;&#xA;import org.eclipse.core.databinding.observable.Realm;&#xA;import org.eclipse.core.databinding.observable.value.IObservableValue;&#xA;import org.eclipse.core.runtime.CoreException;&#xA;import org.eclipse.jface.databinding.swt.WidgetProperties;&#xA;import org.eclipse.swt.events.SelectionAdapter;&#xA;import org.eclipse.swt.events.SelectionEvent;&#xA;import org.eclipse.swt.events.MouseAdapter;import org.eclipse.swt.events.MouseEvent;import org.eclipse.swt.widgets.TabFolder;import org.eclipse.swt.widgets.TabItem;import org.eclipse.swt.SWT;import org.eclipse.swt.dnd.DND;import org.eclipse.swt.dnd.Transfer;import org.eclipse.jface.resource.ImageDescriptor;import org.eclipse.jface.action.IMenuListener;import org.eclipse.jface.action.IMenuManager;import org.eclipse.jface.action.IToolBarManager;import org.eclipse.jface.action.MenuManager;import org.eclipse.jface.dialogs.MessageDialog;import org.eclipse.swt.widgets.Tree;import org.eclipse.swt.widgets.TreeColumn;import org.eclipse.ui.forms.widgets.ScrolledForm;import org.eclipse.core.runtime.FileLocator;import org.eclipse.core.runtime.IPath;import org.eclipse.core.runtime.Path;import org.eclipse.core.runtime.Platform;import org.osgi.framework.Bundle;import org.eclipse.swt.events.KeyAdapter;import org.eclipse.swt.events.KeyEvent;import org.eclipse.swt.events.VerifyEvent;&#xA;/**&#xD;&#xA; * &#xD;&#xA; * @author Grupo SINFOCI &#xD;&#xA; *&#xD;&#xA; */&#xA;public class CotizacionBaseViewPart  extends ViewPart {&#xA;&#xA;&#xA;&#x9;public static final String ID = &quot;cotizacion.view.views.CotizacionBase&quot;;&#xA;&#xA;&#x9;ModelFactoryModel mfm;&#xA;&#x9;UI ui;&#xA;&#x9;ModelFactory modelFactory;&#xA;&#x9;private DataBindingContext m_bindingContext;&#xA;&#x9;cotizacion.ui.viewmodels.contenedorcotizacionbaseviewmodel.ContenedorCotizacionBaseViewModel   contenedorcotizacionBaseViewModel;&#xA;&#x9;public Label lblDescripcion; &#xA;&#x9;public Text textDescripcion; &#xA;&#x9;public Label lblPrecio; &#xA;&#x9;public Button btnRealizarCotizacion;&#xA; &#x9;public Text textPrecio; &#xA;&#x9;public ComboViewer comboViewerCotizacion;&#xA; &#x9;public Combo comboCotizacion; &#xA;&#x9;cotizacion.ui.viewmodels.contenedorcotizacionbaseviewmodel.CotizacionViewModel   cotizacionViewModelSeleccionadoCombo; &#xA;&#x9;public Group groupAsesor; &#xA;&#x9;cotizacion.ui.viewmodels.contenedortrabajadorbaseviewmodel.ContenedorTrabajadorBaseViewModel   contenedorasesorViewModel;&#xA;&#x9;public ComboViewer comboViewerTrabajadorFromTheAsesor;&#xA; &#x9;public Combo comboTrabajadorFromTheAsesor; &#xA;&#x9;cotizacion.ui.viewmodels.contenedortrabajadorbaseviewmodel.TrabajadorViewModel   trabajadorFromTheAsesorViewModelSeleccionadoCombo; &#xA;&#x9;public Group groupCliente; &#xA;&#x9;cotizacion.ui.viewmodels.contenedorclientebaseviewmodel.ContenedorClienteBaseViewModel   contenedorclienteViewModel;&#xA;&#x9;public ComboViewer comboViewerClienteFromTheCliente;&#xA; &#x9;public Combo comboClienteFromTheCliente; &#xA;&#x9;cotizacion.ui.viewmodels.contenedorclientebaseviewmodel.ClienteViewModel   clienteFromTheClienteViewModelSeleccionadoCombo; &#xA;&#x9;private final FormToolkit formToolkit = new FormToolkit(Display.getDefault());&#xA;&#xA;&#x9;public CotizacionBaseViewPart() {&#xA;&#x9;  try {&#xA;&#x9;    mfm = ModelFactoryModel.getInstance();&#xA;&#x9;    mfm.setCotizacionBaseViewPart(this);&#xA;&#x9;    cargarContenedores(); &#xA;&#x9;    syncModel();&#xA;&#x9;    constructorCotizacionBaseViewPart();&#xA;&#x9;  }&#xA;&#x9;  catch (Exception e) {&#xA;&#x9;  }&#xA;&#x9;}&#xA;&#x9;public void cargarContenedores(){&#xA;&#x9;  mfm &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;= ModelFactoryModel.getInstance(); &#xA;&#x9;  contenedorcotizacionBaseViewModel = mfm.getTheContenedorCotizacionBaseViewModel();&#xA;&#x9;  contenedorasesorViewModel = mfm.getTheAsesorViewModelOfCotizacionBase();&#xA;&#x9;  contenedorclienteViewModel = mfm.getTheClienteViewModelOfCotizacionBase();&#xA;&#x9;  &#xA;         }&#xA;&#x9;public void updateData(){&#xA;&#x9;  if(!mfm.getEstado().equals(&quot;ACTUALIZADO&quot;)) {&#xA;&#x9;          mfm.cargar();&#xA;&#x9;  }&#xA;&#x9;  cargarContenedores();&#xA;&#x9;   try {&#xA;&#x9;       initDataBindings();&#xA;&#x9;   } catch (Exception e) {&#xA;&#x9;   }&#xA;&#x9;}&#xA;&#x9;public void createPartControl(Composite parent) {&#xA;&#x9;&#x9;ScrolledComposite sc = new ScrolledComposite(parent, SWT.H_SCROLL |&#x9;SWT.V_SCROLL | SWT.BORDER);&#xA;&#x9;&#x9;Composite container = formToolkit.createComposite(sc, SWT.NONE);&#xA;&#xA;&#x9;&#x9;sc.setContent(container);&#xA;&#x9;&#x9;sc.setExpandHorizontal(true);&#xA;&#x9;&#x9;sc.setExpandVertical(true);&#xA;&#x9;&#x9;sc.setMinSize(container.computeSize(416, 344));&#xA;&#x9;&#x9;formToolkit.paintBordersFor(container);&#xA;&#xA;        lblDescripcion = formToolkit.createLabel(container,&quot;descripcion&quot;,SWT.NONE);&#xA;        lblDescripcion.setForeground(SWTResourceManager.getColor(0, 0, 139)) ;&#xA;        lblDescripcion.setBounds(28,127,70,24);&#xA;&#xA;        lblDescripcion.setFont(SWTResourceManager.getFont(&quot;Segoe UI&quot;,10,SWT.NORMAL));&#xA;&#xA;&#x9;&#x9;textDescripcion = formToolkit.createText(container, &quot;New Text&quot;, SWT.NONE);&#xA;&#x9;&#x9;textDescripcion.setText(&quot;descripcion&quot;);&#xA;&#x9;&#x9;textDescripcion.setBounds(129,127,196,24);&#xA;&#xA;&#x9;&#x9;textDescripcion.addKeyListener(new KeyAdapter() {&#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;public void keyReleased(KeyEvent e) {&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;//TODO Action textDescripcionde la view CotizacionBase&#xA;&#x9;&#x9;&#x9;&#x9;String texto = textDescripcion.getText();&#xA;&#x9;&#x9;&#x9;textDescripcion_ModifyText_LogicalEvent (texto);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;        lblPrecio = formToolkit.createLabel(container,&quot;precio&quot;,SWT.NONE);&#xA;        lblPrecio.setForeground(SWTResourceManager.getColor(0, 0, 139)) ;&#xA;        lblPrecio.setBounds(28,169,70,24);&#xA;&#xA;        lblPrecio.setFont(SWTResourceManager.getFont(&quot;Segoe UI&quot;,10,SWT.NORMAL));&#xA;&#xA;&#x9;&#x9;btnRealizarCotizacion = formToolkit.createButton(container,&quot;realizarCotizacion&quot;,SWT.NONE);&#xA;&#x9;&#x9;btnRealizarCotizacion.setBounds(277,171,85,22);&#xA;&#xA;&#x9;&#x9;btnRealizarCotizacion.setFont(SWTResourceManager.getFont(&quot;Segoe UI&quot;,10,SWT.NORMAL));&#xA;&#xA;&#x9;&#x9;btnRealizarCotizacion.addSelectionListener(new SelectionAdapter() {&#xA;&#xA;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;//TODO Action ButtonbtnRealizarCotizacionde la view CotizacionBase&#xA;&#x9;&#x9;&#x9;&#x9; btnRealizarCotizacion_Selection_LogicalEvent ( &quot;event&quot; );&#xA;&#x9;&#x9; }&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;textPrecio = formToolkit.createText(container, &quot;New Text&quot;, SWT.NONE);&#xA;&#x9;&#x9;textPrecio.setText(&quot;precio&quot;);&#xA;&#x9;&#x9;textPrecio.setBounds(129,171,120,20);&#xA;&#xA;&#x9;&#x9;textPrecio.addKeyListener(new KeyAdapter() {&#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;public void keyReleased(KeyEvent e) {&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;//TODO Action textPreciode la view CotizacionBase&#xA;&#x9;&#x9;&#x9;&#x9;String texto = textPrecio.getText();&#xA;&#x9;&#x9;&#x9;textPrecio_ModifyText_LogicalEvent (texto);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;comboViewerCotizacion = new ComboViewer(container,SWT.NONE);&#xA;&#x9;&#x9;comboCotizacion =  comboViewerCotizacion.getCombo();&#xA;&#x9;&#x9;comboCotizacion.setBounds(22,215,120,24);&#xA;&#x9;&#x9;comboCotizacion.setFont(SWTResourceManager.getFont(&quot;Segoe UI&quot;,10,SWT.NORMAL));&#xA;&#xA;&#x9;&#x9;formToolkit.paintBordersFor(comboCotizacion);&#xA;&#xA;&#x9;&#x9;comboCotizacion.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;   public void widgetSelected(SelectionEvent e) { &#xA;&#x9;&#x9;    //TODO ActionCombo ViewCotizacion de la viewCotizacionBase&#xA;&#x9;&#x9;     IStructuredSelection is = (IStructuredSelection) comboViewerCotizacion.getSelection();&#xA;&#x9;&#x9;   cotizacionViewModelSeleccionadoCombo = (cotizacion.ui.viewmodels.contenedorcotizacionbaseviewmodel.CotizacionViewModel) is.getFirstElement();&#xA;&#x9;&#x9;   comboCotizacion_Selection_LogicalEvent ( &quot;event&quot; );&#xA;&#x9;&#x9;   }&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;comboCotizacion.addKeyListener(new KeyAdapter() {&#xA;&#x9;&#x9;   public void keyReleased(KeyEvent e) { &#xA;&#x9;&#x9;    //TODO ActionCombo ViewCotizacion de la viewCotizacionBase&#xA;&#x9;&#x9;&#x9;&#x9;String texto = comboCotizacion.getText();&#xA;&#x9;&#x9;   &#x9;&#x9;comboCotizacion_ModifyText_LogicalEvent (texto);&#xA;&#x9;&#x9;   &#x9;&#x9;comboCotizacion.setText(texto);&#xA;&#x9;&#x9;   &#x9;&#x9;int stringLength = comboCotizacion.getText().length();&#xA;&#x9;&#x9;   &#x9;&#x9;comboCotizacion.setSelection(new Point (stringLength, stringLength));&#xA;&#x9;&#x9;   &#x9;&#x9;comboCotizacion.setVisibleItemCount(100);&#xA;&#x9;&#x9;   }&#x9;&#x9;&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;buildContenedorAsesor(container);&#xA;&#xA;&#x9;&#x9;buildContenedorCliente(container);&#xA;&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;initDataBindings();&#xA;          }catch (Exception e) {&#xA;        }&#xA;&#xA;&#x9;&#x9;viewPartLoadedAction();&#xA;&#x9;}&#xA;&#x9;public void setFocus() {&#xA;&#x9;&#x9;// Set the focus&#xA;&#x9;}&#xA;&#xA;      public void viewPartLoadedAction (){&#xA;             /**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : CotizacionBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;      }&#xA;&#xA;      public void reboot (){&#xA;             constructorCotizacionBaseViewPart();&#xA;      }&#xA;&#xA;      public void syncModel (){&#xA;             /**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : CotizacionBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;      }&#xA;&#xA;      public void constructorCotizacionBaseViewPart (){&#xA;             /**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : CotizacionBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;    &#x9;  contenedorcotizacionBaseViewModel.updateViewModel();&#xA;    &#x9;  contenedorclienteViewModel.updateViewModel();&#xA;    &#x9;  contenedorasesorViewModel.updateViewModel();&#xA;    &#x9;  mfm.salvar();&#xA;      }&#xA;&#xA;      public void textDescripcion_ModifyText_LogicalEvent ( String  event ){&#xA;             /**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : CotizacionBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;      }&#xA;&#xA;      public void btnRealizarCotizacion_Selection_LogicalEvent ( String  event ){&#xA;             /**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : CotizacionBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;    &#x9;  contenedorcotizacionBaseViewModel.crearCotizacion();&#xA;      }&#xA;&#xA;      public void textPrecio_ModifyText_LogicalEvent ( String  event ){&#xA;             /**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : CotizacionBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;      }&#xA;&#xA;      public void comboCotizacion_Selection_LogicalEvent ( String  event ){&#xA;             contenedorcotizacionBaseViewModel.setSelectedComboCotizacion(cotizacionViewModelSeleccionadoCombo);&#xA;      }&#xA;&#xA;      public void comboCotizacion_ModifyText_LogicalEvent ( String  event ){&#xA;             /**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : CotizacionBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;      }&#xA;&#xA;      public void comboTrabajadorFromTheAsesor_Selection_LogicalEvent ( String  event ){&#xA;             contenedorasesorViewModel.setSelectedComboTrabajador(trabajadorFromTheAsesorViewModelSeleccionadoCombo);&#xA;      }&#xA;&#xA;      public void comboTrabajadorFromTheAsesor_ModifyText_LogicalEvent ( String  event ){&#xA;             /**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : ClienteBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;      }&#xA;&#xA;      public void buildContenedorAsesor ( Composite  container ){&#xA;             &#x9;&#x9;groupAsesor = new Group(container, SWT.NONE);&#xA;&#x9;&#x9;groupAsesor.setBounds(232,23,157,65);&#xA;&#x9;&#x9;groupAsesor.setText(&quot;Asesor&quot;);&#xA;&#x9;&#x9;groupAsesor.setFont(SWTResourceManager.getFont(&quot;Segoe UI&quot;,10,SWT.NORMAL));&#xA;&#xA;&#x9;&#x9;formToolkit.adapt(groupAsesor);&#xA;&#x9;&#x9;formToolkit.paintBordersFor(groupAsesor);&#xA;&#xA;&#x9;&#x9;comboViewerTrabajadorFromTheAsesor = new ComboViewer(groupAsesor,SWT.NONE);&#xA;&#x9;&#x9;comboTrabajadorFromTheAsesor =  comboViewerTrabajadorFromTheAsesor.getCombo();&#xA;&#x9;&#x9;comboTrabajadorFromTheAsesor.setBounds(3,14,120,24);&#xA;&#x9;&#x9;comboTrabajadorFromTheAsesor.setFont(SWTResourceManager.getFont(&quot;Segoe UI&quot;,10,SWT.NORMAL));&#xA;&#xA;&#x9;&#x9;formToolkit.paintBordersFor(comboTrabajadorFromTheAsesor);&#xA;&#xA;&#x9;&#x9;comboTrabajadorFromTheAsesor.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;   public void widgetSelected(SelectionEvent e) { &#xA;&#x9;&#x9;    //TODO ActionCombo ViewTrabajadorFromTheAsesor de la viewCotizacionBase&#xA;&#x9;&#x9;     IStructuredSelection is = (IStructuredSelection) comboViewerTrabajadorFromTheAsesor.getSelection();&#xA;&#x9;&#x9;   trabajadorFromTheAsesorViewModelSeleccionadoCombo = (cotizacion.ui.viewmodels.contenedortrabajadorbaseviewmodel.TrabajadorViewModel) is.getFirstElement();&#xA;&#x9;&#x9;   comboTrabajadorFromTheAsesor_Selection_LogicalEvent ( &quot;event&quot; );&#xA;&#x9;&#x9;   }&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;comboTrabajadorFromTheAsesor.addKeyListener(new KeyAdapter() {&#xA;&#x9;&#x9;   public void keyReleased(KeyEvent e) { &#xA;&#x9;&#x9;    //TODO ActionCombo ViewTrabajadorFromTheAsesor de la viewCotizacionBase&#xA;&#x9;&#x9;&#x9;&#x9;String texto = comboTrabajadorFromTheAsesor.getText();&#xA;&#x9;&#x9;   &#x9;&#x9;comboTrabajadorFromTheAsesor_ModifyText_LogicalEvent (texto);&#xA;&#x9;&#x9;   &#x9;&#x9;comboTrabajadorFromTheAsesor.setText(texto);&#xA;&#x9;&#x9;   &#x9;&#x9;int stringLength = comboTrabajadorFromTheAsesor.getText().length();&#xA;&#x9;&#x9;   &#x9;&#x9;comboTrabajadorFromTheAsesor.setSelection(new Point (stringLength, stringLength));&#xA;&#x9;&#x9;   &#x9;&#x9;comboTrabajadorFromTheAsesor.setVisibleItemCount(100);&#xA;&#x9;&#x9;   }&#x9;&#x9;&#xA;&#x9;&#x9;});&#xA;&#xA;      }&#xA;&#xA;      public void comboClienteFromTheCliente_Selection_LogicalEvent ( String  event ){&#xA;             contenedorclienteViewModel.setSelectedComboCliente(clienteFromTheClienteViewModelSeleccionadoCombo);&#xA;      }&#xA;&#xA;      public void comboClienteFromTheCliente_ModifyText_LogicalEvent ( String  event ){&#xA;             /**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : ClienteBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;      }&#xA;&#xA;      public void buildContenedorCliente ( Composite  container ){&#xA;             &#x9;&#x9;groupCliente = new Group(container, SWT.NONE);&#xA;&#x9;&#x9;groupCliente.setBounds(22,23,184,71);&#xA;&#x9;&#x9;groupCliente.setText(&quot;cliente&quot;);&#xA;&#x9;&#x9;groupCliente.setFont(SWTResourceManager.getFont(&quot;Segoe UI&quot;,10,SWT.NORMAL));&#xA;&#xA;&#x9;&#x9;formToolkit.adapt(groupCliente);&#xA;&#x9;&#x9;formToolkit.paintBordersFor(groupCliente);&#xA;&#xA;&#x9;&#x9;comboViewerClienteFromTheCliente = new ComboViewer(groupCliente,SWT.NONE);&#xA;&#x9;&#x9;comboClienteFromTheCliente =  comboViewerClienteFromTheCliente.getCombo();&#xA;&#x9;&#x9;comboClienteFromTheCliente.setBounds(29,16,120,24);&#xA;&#x9;&#x9;comboClienteFromTheCliente.setFont(SWTResourceManager.getFont(&quot;Segoe UI&quot;,10,SWT.NORMAL));&#xA;&#xA;&#x9;&#x9;formToolkit.paintBordersFor(comboClienteFromTheCliente);&#xA;&#xA;&#x9;&#x9;comboClienteFromTheCliente.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;   public void widgetSelected(SelectionEvent e) { &#xA;&#x9;&#x9;    //TODO ActionCombo ViewClienteFromTheCliente de la viewCotizacionBase&#xA;&#x9;&#x9;     IStructuredSelection is = (IStructuredSelection) comboViewerClienteFromTheCliente.getSelection();&#xA;&#x9;&#x9;   clienteFromTheClienteViewModelSeleccionadoCombo = (cotizacion.ui.viewmodels.contenedorclientebaseviewmodel.ClienteViewModel) is.getFirstElement();&#xA;&#x9;&#x9;   comboClienteFromTheCliente_Selection_LogicalEvent ( &quot;event&quot; );&#xA;&#x9;&#x9;   }&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;comboClienteFromTheCliente.addKeyListener(new KeyAdapter() {&#xA;&#x9;&#x9;   public void keyReleased(KeyEvent e) { &#xA;&#x9;&#x9;    //TODO ActionCombo ViewClienteFromTheCliente de la viewCotizacionBase&#xA;&#x9;&#x9;&#x9;&#x9;String texto = comboClienteFromTheCliente.getText();&#xA;&#x9;&#x9;   &#x9;&#x9;comboClienteFromTheCliente_ModifyText_LogicalEvent (texto);&#xA;&#x9;&#x9;   &#x9;&#x9;comboClienteFromTheCliente.setText(texto);&#xA;&#x9;&#x9;   &#x9;&#x9;int stringLength = comboClienteFromTheCliente.getText().length();&#xA;&#x9;&#x9;   &#x9;&#x9;comboClienteFromTheCliente.setSelection(new Point (stringLength, stringLength));&#xA;&#x9;&#x9;   &#x9;&#x9;comboClienteFromTheCliente.setVisibleItemCount(100);&#xA;&#x9;&#x9;   }&#x9;&#x9;&#xA;&#x9;&#x9;});&#xA;&#xA;      }&#xA;      protected DataBindingContext initDataBindings() {&#xA;//&#xA;        DataBindingContext bindingContext = new DataBindingContext();&#xA;        IObservableValue observeTexttextDescripcionObserveWidget = WidgetProperties.text(SWT.Modify).observe(textDescripcion);&#xA;        IObservableValue contenedorcotizacionBasetextDescripcionObserveValue = EMFObservables.observeValue(contenedorcotizacionBaseViewModel,cotizacion.ui.viewmodels.contenedorcotizacionbaseviewmodel.ContenedorcotizacionbaseviewmodelPackage.Literals.CONTENEDOR_COTIZACION_BASE_VIEW_MODEL__DESCRIPCION);&#xA;        bindingContext.bindValue(observeTexttextDescripcionObserveWidget,contenedorcotizacionBasetextDescripcionObserveValue, null, null);&#xA;        //&#xA;        IObservableValue observeTexttextPrecioObserveWidget = WidgetProperties.text(SWT.Modify).observe(textPrecio);&#xA;        IObservableValue contenedorcotizacionBasetextPrecioObserveValue = EMFObservables.observeValue(contenedorcotizacionBaseViewModel,cotizacion.ui.viewmodels.contenedorcotizacionbaseviewmodel.ContenedorcotizacionbaseviewmodelPackage.Literals.CONTENEDOR_COTIZACION_BASE_VIEW_MODEL__PRECIO);&#xA;        bindingContext.bindValue(observeTexttextPrecioObserveWidget,contenedorcotizacionBasetextPrecioObserveValue, null, null);&#xA;        //&#xA;&#xA;      ObservableListContentProvider listContentProvider14= new ObservableListContentProvider();&#xA;        IObservableMap[] observeMaps14= EMFObservables.observeMaps(listContentProvider14.getKnownElements(),&#xA;        new EStructuralFeature[]{cotizacion.ui.viewmodels.contenedorcotizacionbaseviewmodel.ContenedorcotizacionbaseviewmodelPackage.Literals.COTIZACION_VIEW_MODEL__DESCRIPCION});&#xA;        comboViewerCotizacion.setLabelProvider(new ObservableMapLabelProvider(observeMaps14));&#xA;        comboViewerCotizacion.setContentProvider(listContentProvider14);&#xA;&#xA;        IObservableList observeList14= EMFObservables.observeList(Realm.getDefault(),contenedorcotizacionBaseViewModel,&#xA;        cotizacion.ui.viewmodels.contenedorcotizacionbaseviewmodel.ContenedorcotizacionbaseviewmodelPackage.Literals.CONTENEDOR_COTIZACION_BASE_VIEW_MODEL__LISTA_COTIZACION_VIEW_MODEL);&#xA;        comboViewerCotizacion.setInput(observeList14);&#xA;        //&#xA;&#xA;      ObservableListContentProvider listContentProviderTrabajadorFromTheAsesor= new ObservableListContentProvider();&#xA;        IObservableMap[] observeMapsTrabajadorFromTheAsesor= EMFObservables.observeMaps(listContentProviderTrabajadorFromTheAsesor.getKnownElements(),&#xA;        new EStructuralFeature[]{cotizacion.ui.viewmodels.contenedortrabajadorbaseviewmodel.ContenedortrabajadorbaseviewmodelPackage.Literals.TRABAJADOR_VIEW_MODEL__NOMBRE});&#xA;        comboViewerTrabajadorFromTheAsesor.setLabelProvider(new ObservableMapLabelProvider(observeMapsTrabajadorFromTheAsesor));&#xA;        comboViewerTrabajadorFromTheAsesor.setContentProvider(listContentProviderTrabajadorFromTheAsesor);&#xA;&#xA;        IObservableList observeListTrabajadorFromTheAsesor= EMFObservables.observeList(Realm.getDefault(),contenedorasesorViewModel,&#xA;        cotizacion.ui.viewmodels.contenedortrabajadorbaseviewmodel.ContenedortrabajadorbaseviewmodelPackage.Literals.CONTENEDOR_TRABAJADOR_BASE_VIEW_MODEL__LISTA_TRABAJADOR_VIEW_MODEL);&#xA;        comboViewerTrabajadorFromTheAsesor.setInput(observeListTrabajadorFromTheAsesor);&#xA;        //&#xA;&#xA;      ObservableListContentProvider listContentProviderClienteFromTheCliente= new ObservableListContentProvider();&#xA;        IObservableMap[] observeMapsClienteFromTheCliente= EMFObservables.observeMaps(listContentProviderClienteFromTheCliente.getKnownElements(),&#xA;        new EStructuralFeature[]{cotizacion.ui.viewmodels.contenedorclientebaseviewmodel.ContenedorclientebaseviewmodelPackage.Literals.CLIENTE_VIEW_MODEL__NOMBRE});&#xA;        comboViewerClienteFromTheCliente.setLabelProvider(new ObservableMapLabelProvider(observeMapsClienteFromTheCliente));&#xA;        comboViewerClienteFromTheCliente.setContentProvider(listContentProviderClienteFromTheCliente);&#xA;&#xA;        IObservableList observeListClienteFromTheCliente= EMFObservables.observeList(Realm.getDefault(),contenedorclienteViewModel,&#xA;        cotizacion.ui.viewmodels.contenedorclientebaseviewmodel.ContenedorclientebaseviewmodelPackage.Literals.CONTENEDOR_CLIENTE_BASE_VIEW_MODEL__LISTA_CLIENTE_VIEW_MODEL);&#xA;        comboViewerClienteFromTheCliente.setInput(observeListClienteFromTheCliente);&#xA;        //&#xA;&#xA;         return bindingContext;&#xA;//&#xA;      }&#xA;}&#xA;" type="View Modal" description="Insert a description" font="Segoe UI" stateFigure="VMVP" width="416" height="344" positionX="-2" positionY="0" nameUserInterfaceReference="" idWidget="_yGe6YNSrEeyDluTmCDBPEQ" textColor="0" textSize="9" textStyle="false">
      <listModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_yG5KEdSrEeyDluTmCDBPEQ" name="viewPartLoadedAction" id="_yGe6YdSrEeyDluTmCDBPEQ" typeElement="Operation" urlIcon="" body="/**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : CotizacionBaseViewPart&#xD;&#xA;    &#x9;   */" visible="true"/>
      <listModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_yG5KEtSrEeyDluTmCDBPEQ" name="constructorCotizacionBaseViewPart" id="_yGe6YtSrEeyDluTmCDBPEQ" typeElement="Operation" urlIcon="" body="/**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : CotizacionBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;    &#x9;  contenedorcotizacionBaseViewModel.updateViewModel();&#xA;    &#x9;  contenedorclienteViewModel.updateViewModel();&#xA;    &#x9;  contenedorasesorViewModel.updateViewModel();&#xA;    &#x9;  mfm.salvar();" visible="true"/>
      <listModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_yG5KE9SrEeyDluTmCDBPEQ" name="reboot" id="_yGfhcNSrEeyDluTmCDBPEQ" typeElement="Operation" urlIcon="" body="constructorCotizacionBaseViewPart();" visible="true"/>
      <listModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_yG5KFNSrEeyDluTmCDBPEQ" name="syncModel" id="_yGfhcdSrEeyDluTmCDBPEQ" typeElement="Operation" urlIcon="" body="/**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : CotizacionBaseViewPart&#xD;&#xA;    &#x9;   */" visible="true"/>
      <itsModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_nMif4NSsEeyDluTmCDBPEQ" name="updateViewModel" id="_nMrp0NSsEeyDluTmCDBPEQ" description="" typeElement="Operation" urlIcon="platform:/plugin/tooldataform.datosdiagram/icons/Metodo.gif" body="&#xD;&#xA;&#x9;&#x9;//TODO updateViewModel&#xD;&#xA;&#x9;&#x9;getTheUI().updateContenedorCotizacionViewModel(this);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;" visible="true" returnTypeMethod=""/>
      <itsModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_oJ7VMNSsEeyDluTmCDBPEQ" name="crearCotizacion" id="_oJ7VMdSsEeyDluTmCDBPEQ" documentation="" description="" body="&#xD;&#xA;&#x9;&#x9;//TODO crearCotizacion&#xD;&#xA;&#x9;&#x9;getTheUI().crearCotizacion(this);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;" visible="true" returnTypeMethod="">
        <itsModelElementCore xmi:type="tooldataform.browser:DiagramDataCore" xmi:id="_CyGssNS4EeyDluTmCDBPEQ" name="crearCotizacion" id="_Cxqn0NS4EeyDluTmCDBPEQ" pathElementRoot="cotizacion.ui.viewModels.contenedorCotizacionBaseViewModel.ContenedorCotizacionBaseViewModel.crearCotizacion" typeElement="SecuenceDiagram" urlIcon="platform:/plugin/tooldataform.datosdiagram/icons/SecuenciaModel.gif" urlDiagramCore="platform:/resource/cotizacion/diagramas/_b91dc2.secuenciadiagram" modelId="MetamodelodataformSecuenciaDiagram" editorID="tooldataform.secuenciadiagram.part.MetamodelodataformDiagramEditorID" idPath="_b91dc2.secuenciadiagram" extension="secuenciadiagram"/>
      </itsModelElementCore>
      <listIndividualWidge xmi:type="tooldataform.ui:TextView" xmi:id="_UTBcMNSsEeyDluTmCDBPEQ" name="descripcion" nameVar="descripcion" font="Segoe UI" width="70" height="24" positionX="28" positionY="112" idWidget="_UTBcMdSsEeyDluTmCDBPEQ" textColor="0" textSize="9" textStyle="false"/>
      <listIndividualWidge xmi:type="tooldataform.ui:TextComponent" xmi:id="_V9WQANSsEeyDluTmCDBPEQ" name="descripcion" nameVar="descripcion" pathImage="23:11:7" font="Segoe UI" width="196" height="24" positionX="129" positionY="112" idAndroid="ModifyText#" idWidget="_V9WQAdSsEeyDluTmCDBPEQ" textColor="0" textSize="9" textStyle="false">
        <listModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_V9W3EdSsEeyDluTmCDBPEQ" name="textDescripcion_ModifyText_LogicalEvent" id="_V9W3ENSsEeyDluTmCDBPEQ" body="/**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : CotizacionBaseViewPart&#xD;&#xA;    &#x9;   */" visible="true" returnTypeMethod="void">
          <listParametros xmi:type="tooldataform.pmoo:Atributo" xmi:id="_wI-dQNWaEey9WYMFkpQzVQ" name="event" type="String"/>
        </listModelElementCore>
      </listIndividualWidge>
      <listIndividualWidge xmi:type="tooldataform.ui:TextView" xmi:id="_Z4EZINSsEeyDluTmCDBPEQ" name="precio" nameVar="precio" font="Segoe UI" width="70" height="24" positionX="28" positionY="154" idWidget="_Z4EZIdSsEeyDluTmCDBPEQ" textColor="0" textSize="9" textStyle="false"/>
      <listIndividualWidge xmi:type="tooldataform.ui:Button" xmi:id="_iyxDQNSsEeyDluTmCDBPEQ" name="realizarCotizacion" nameVar="realizarCotizacion" font="Segoe UI" width="85" height="22" positionX="277" positionY="156" idAndroid="Selection#" idWidget="_iyxDQdSsEeyDluTmCDBPEQ" textColor="0" textSize="9" textStyle="false">
        <listModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_iyxDQ9SsEeyDluTmCDBPEQ" name="btnRealizarCotizacion_Selection_LogicalEvent" id="_iyxDQtSsEeyDluTmCDBPEQ" body="/**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : CotizacionBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;    &#x9;  contenedorcotizacionBaseViewModel.crearCotizacion();" visible="true" returnTypeMethod="void">
          <listParametros xmi:type="tooldataform.pmoo:Atributo" xmi:id="_wJ31INWaEey9WYMFkpQzVQ" name="event" type="String"/>
        </listModelElementCore>
      </listIndividualWidge>
      <listIndividualWidge xmi:type="tooldataform.ui:TextComponent" xmi:id="_TThGANS3EeyDluTmCDBPEQ" name="precio" nameVar="precio" pathImage="23:11:12" font="Segoe UI" width="120" height="20" positionX="129" positionY="156" idAndroid="ModifyText#" idWidget="_TThtENS3EeyDluTmCDBPEQ" textColor="0" textSize="9" textStyle="false">
        <listModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_TThtEtS3EeyDluTmCDBPEQ" name="textPrecio_ModifyText_LogicalEvent" id="_TThtEdS3EeyDluTmCDBPEQ" body="/**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : CotizacionBaseViewPart&#xD;&#xA;    &#x9;   */" visible="true" returnTypeMethod="void">
          <listParametros xmi:type="tooldataform.pmoo:Atributo" xmi:id="_wKeSENWaEey9WYMFkpQzVQ" name="event" type="String"/>
        </listModelElementCore>
      </listIndividualWidge>
      <listIndividualWidge xmi:type="tooldataform.ui:Spinner" xmi:id="_bcep0NS6EeyDluTmCDBPEQ" name="Cotizacion" esteriotipoName="selectedComboCotizacion" nameVar="cotizacion" font="Segoe UI" width="120" height="24" positionX="22" positionY="200" hasViewModel="true" idElementReference="" nameUserInterfaceReference="" idAndroid="Selection#Modifytext#" idWidget="_bcfQ4NS6EeyDluTmCDBPEQ" textColor="0" textSize="9" textStyle="false">
        <listModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_bcfQ4tS6EeyDluTmCDBPEQ" name="comboCotizacion_Selection_LogicalEvent" id="_bcfQ4dS6EeyDluTmCDBPEQ" body="contenedorcotizacionBaseViewModel.setSelectedComboCotizacion(cotizacionViewModelSeleccionadoCombo);" visible="true" returnTypeMethod="void">
          <listParametros xmi:type="tooldataform.pmoo:Atributo" xmi:id="_wLgz4NWaEey9WYMFkpQzVQ" name="event" type="String"/>
        </listModelElementCore>
        <listModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_bcf38dS6EeyDluTmCDBPEQ" name="comboCotizacion_ModifyText_LogicalEvent" id="_bcf38NS6EeyDluTmCDBPEQ" body="/**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : CotizacionBaseViewPart&#xD;&#xA;    &#x9;   */" visible="true" returnTypeMethod="void">
          <listParametros xmi:type="tooldataform.pmoo:Atributo" xmi:id="_wMHQ1tWaEey9WYMFkpQzVQ" name="event" type="String"/>
        </listModelElementCore>
        <theItem xmi:type="tooldataform.ui:ItemSpinner" xmi:id="_bcep0dS6EeyDluTmCDBPEQ" name="descripcion" nameVar="descripcion" font="Segoe UI" textColor="0" textSize="9" textStyle="false"/>
      </listIndividualWidge>
      <listGraphicalContainerWidget xmi:type="tooldataform.ui:Group" xmi:id="_MhpKkNSsEeyDluTmCDBPEQ" name="TrabajadorBase" esteriotipoName="TrabajadorBase" nameVar="Asesor" documentation="package cotizacion.view.views;&#xA;import cotizacion.ui.UiPackage.Literals;&#xA;import org.eclipse.swt.custom.ScrolledComposite;&#xA;import cotizacion.ModelFactory;&#xA;import cotizacion.ui.*;&#xA;import cotizacion.ModelFactory;&#xA;import cotizacion.ui.viewmodels.contenedortrabajadorbaseviewmodel.*;&#xA;import cotizacion.view.model.ModelFactoryModel;&#xA;import org.eclipse.wb.swt.SWTResourceManager;&#xA;import org.eclipse.ui.part.ViewPart;&#xA;import org.eclipse.jface.viewers.ISelectionChangedListener;&#xA;import org.eclipse.jface.viewers.IStructuredContentProvider;&#xA;import org.eclipse.jface.viewers.IStructuredSelection;&#xA;import org.eclipse.jface.action.MenuManager;&#xA;import org.eclipse.jface.action.StatusLineManager;&#xA;import org.eclipse.jface.action.ToolBarManager;&#xA;import org.eclipse.jface.window.ApplicationWindow;&#xA;import org.eclipse.swt.SWT;&#xA;import org.eclipse.swt.graphics.Point;&#xA;import org.eclipse.swt.widgets.Composite;&#xA;import org.eclipse.swt.widgets.Control;&#xA;import org.eclipse.swt.widgets.Display;&#xA;import org.eclipse.swt.widgets.Shell;&#xA;import org.eclipse.swt.widgets.Group;&#xA;import org.eclipse.swt.widgets.Table;&#xA;import org.eclipse.jface.viewers.TableViewer;&#xA;import org.eclipse.swt.widgets.TableColumn;&#xA;import org.eclipse.jface.viewers.TableViewerColumn;&#xA;import org.eclipse.swt.widgets.Combo;&#xA;import org.eclipse.jface.viewers.TreeViewer;import org.eclipse.jface.viewers.ComboViewer;&#xA;import org.eclipse.ui.forms.widgets.FormToolkit;&#xA;import org.eclipse.swt.widgets.Label;&#xA;import org.eclipse.swt.widgets.Text;&#xA;import org.eclipse.swt.widgets.Button;&#xA;import org.eclipse.swt.events.SelectionAdapter;&#xA;import org.eclipse.swt.events.SelectionEvent;&#xA;import org.eclipse.swt.events.ModifyListener;&#xA;import org.eclipse.swt.events.ModifyEvent;&#xA;import org.eclipse.swt.widgets.DateTime;&#xA;&#xA;import org.eclipse.core.databinding.DataBindingContext;&#xA;import org.eclipse.jface.databinding.viewers.ObservableListContentProvider;&#xA;import org.eclipse.core.databinding.observable.map.IObservableMap;&#xA;import org.eclipse.emf.databinding.EMFObservables;&#xA;import org.eclipse.emf.ecore.EStructuralFeature;&#xA;import org.eclipse.jface.databinding.viewers.ObservableMapLabelProvider;&#xA;import org.eclipse.core.databinding.observable.list.IObservableList;&#xA;import org.eclipse.core.databinding.observable.Realm;&#xA;import org.eclipse.core.databinding.observable.value.IObservableValue;&#xA;import org.eclipse.core.runtime.CoreException;&#xA;import org.eclipse.jface.databinding.swt.WidgetProperties;&#xA;import org.eclipse.swt.events.SelectionAdapter;&#xA;import org.eclipse.swt.events.SelectionEvent;&#xA;import org.eclipse.swt.events.MouseAdapter;import org.eclipse.swt.events.MouseEvent;import org.eclipse.swt.widgets.TabFolder;import org.eclipse.swt.widgets.TabItem;import org.eclipse.swt.SWT;import org.eclipse.swt.dnd.DND;import org.eclipse.swt.dnd.Transfer;import org.eclipse.jface.resource.ImageDescriptor;import org.eclipse.jface.action.IMenuListener;import org.eclipse.jface.action.IMenuManager;import org.eclipse.jface.action.IToolBarManager;import org.eclipse.jface.action.MenuManager;import org.eclipse.jface.dialogs.MessageDialog;import org.eclipse.swt.widgets.Tree;import org.eclipse.swt.widgets.TreeColumn;import org.eclipse.ui.forms.widgets.ScrolledForm;import org.eclipse.core.runtime.FileLocator;import org.eclipse.core.runtime.IPath;import org.eclipse.core.runtime.Path;import org.eclipse.core.runtime.Platform;import org.osgi.framework.Bundle;import org.eclipse.swt.events.KeyAdapter;import org.eclipse.swt.events.KeyEvent;import org.eclipse.swt.events.VerifyEvent;&#xA;/**&#xD;&#xA; * &#xD;&#xA; * @author Grupo SINFOCI &#xD;&#xA; *&#xD;&#xA; */&#xA;public class TrabajadorBaseViewPart  extends ViewPart {&#xA;&#xA;&#xA;&#x9;public static final String ID = &quot;cotizacion.view.views.TrabajadorBase&quot;;&#xA;&#xA;&#x9;ModelFactoryModel mfm;&#xA;&#x9;UI ui;&#xA;&#x9;ModelFactory modelFactory;&#xA;&#x9;private DataBindingContext m_bindingContext;&#xA;&#x9;cotizacion.ui.viewmodels.contenedortrabajadorbaseviewmodel.ContenedorTrabajadorBaseViewModel   contenedortrabajadorBaseViewModel;&#xA;&#x9;public Text textNombre; &#xA;&#x9;public Text textId; &#xA;&#x9;public Text textApellido; &#xA;&#x9;public Button btnEliminarTrabajador;&#xA; &#x9;public Button btnActualizarTrabajador;&#xA; &#x9;public Label lblNombre; &#xA;&#x9;public Label lblId; &#xA;&#x9;public Button btnAgregarTrabajador;&#xA; &#x9;public Label lblApellido; &#xA;&#x9;public ComboViewer comboViewerTrabajador;&#xA; &#x9;public Combo comboTrabajador; &#xA;&#x9;cotizacion.ui.viewmodels.contenedortrabajadorbaseviewmodel.TrabajadorViewModel   trabajadorViewModelSeleccionadoCombo; &#xA;&#x9;public Label lblTipo; &#xA;&#x9;public Text textTipo; &#xA;&#x9;public Table tabletableTrabajador;&#xA; &#x9;public TableViewer tableTrabajador;&#xA; &#x9;cotizacion.ui.viewmodels.contenedortrabajadorbaseviewmodel.TrabajadorViewModel   tableTrabajadorViewModelSeleccionadoTabla; &#xA;&#x9;private final FormToolkit formToolkit = new FormToolkit(Display.getDefault());&#xA;&#xA;&#x9;public TrabajadorBaseViewPart() {&#xA;&#x9;  try {&#xA;&#x9;    mfm = ModelFactoryModel.getInstance();&#xA;&#x9;    mfm.setTrabajadorBaseViewPart(this);&#xA;&#x9;    cargarContenedores(); &#xA;&#x9;    syncModel();&#xA;&#x9;    constructorTrabajadorBaseViewPart();&#xA;&#x9;  }&#xA;&#x9;  catch (Exception e) {&#xA;&#x9;  }&#xA;&#x9;}&#xA;&#x9;public void cargarContenedores(){&#xA;&#x9;  mfm &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;= ModelFactoryModel.getInstance(); &#xA;&#x9;  contenedortrabajadorBaseViewModel = mfm.getTheContenedorTrabajadorBaseViewModel();&#xA;&#x9;  &#xA;         }&#xA;&#x9;public void updateData(){&#xA;&#x9;  if(!mfm.getEstado().equals(&quot;ACTUALIZADO&quot;)) {&#xA;&#x9;          mfm.cargar();&#xA;&#x9;  }&#xA;&#x9;  cargarContenedores();&#xA;&#x9;   try {&#xA;&#x9;       initDataBindings();&#xA;&#x9;   } catch (Exception e) {&#xA;&#x9;   }&#xA;&#x9;}&#xA;&#x9;public void createPartControl(Composite parent) {&#xA;&#x9;&#x9;ScrolledComposite sc = new ScrolledComposite(parent, SWT.H_SCROLL |&#x9;SWT.V_SCROLL | SWT.BORDER);&#xA;&#x9;&#x9;Composite container = formToolkit.createComposite(sc, SWT.NONE);&#xA;&#xA;&#x9;&#x9;sc.setContent(container);&#xA;&#x9;&#x9;sc.setExpandHorizontal(true);&#xA;&#x9;&#x9;sc.setExpandVertical(true);&#xA;&#x9;&#x9;sc.setMinSize(container.computeSize(392, 380));&#xA;&#x9;&#x9;formToolkit.paintBordersFor(container);&#xA;&#xA;&#x9;&#x9;textNombre = formToolkit.createText(container, &quot;New Text&quot;, SWT.NONE);&#xA;&#x9;&#x9;textNombre.setText(&quot;nombre&quot;);&#xA;&#x9;&#x9;textNombre.setBounds(122,113,120,20);&#xA;&#xA;&#x9;&#x9;textNombre.addKeyListener(new KeyAdapter() {&#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;public void keyReleased(KeyEvent e) {&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;//TODO Action textNombrede la view TrabajadorBase&#xA;&#x9;&#x9;&#x9;&#x9;String texto = textNombre.getText();&#xA;&#x9;&#x9;&#x9;textNombre_ModifyText_LogicalEvent (texto);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;textId = formToolkit.createText(container, &quot;New Text&quot;, SWT.NONE);&#xA;&#x9;&#x9;textId.setText(&quot;id&quot;);&#xA;&#x9;&#x9;textId.setBounds(122,83,120,20);&#xA;&#xA;&#x9;&#x9;textId.addKeyListener(new KeyAdapter() {&#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;public void keyReleased(KeyEvent e) {&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;//TODO Action textIdde la view TrabajadorBase&#xA;&#x9;&#x9;&#x9;&#x9;String texto = textId.getText();&#xA;&#x9;&#x9;&#x9;textId_ModifyText_LogicalEvent (texto);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;textApellido = formToolkit.createText(container, &quot;New Text&quot;, SWT.NONE);&#xA;&#x9;&#x9;textApellido.setText(&quot;apellido&quot;);&#xA;&#x9;&#x9;textApellido.setBounds(122,141,120,20);&#xA;&#xA;&#x9;&#x9;textApellido.addKeyListener(new KeyAdapter() {&#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;public void keyReleased(KeyEvent e) {&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;//TODO Action textApellidode la view TrabajadorBase&#xA;&#x9;&#x9;&#x9;&#x9;String texto = textApellido.getText();&#xA;&#x9;&#x9;&#x9;textApellido_ModifyText_LogicalEvent (texto);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;btnEliminarTrabajador = formToolkit.createButton(container,&quot;EliminarTrabajador&quot;,SWT.NONE);&#xA;&#x9;&#x9;btnEliminarTrabajador.setBounds(262,89,84,22);&#xA;&#xA;&#x9;&#x9;btnEliminarTrabajador.setFont(SWTResourceManager.getFont(&quot;Segoe UI&quot;,10,SWT.NORMAL));&#xA;&#xA;&#x9;&#x9;btnEliminarTrabajador.addSelectionListener(new SelectionAdapter() {&#xA;&#xA;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;//TODO Action ButtonbtnEliminarTrabajadorde la view TrabajadorBase&#xA;&#x9;&#x9;&#x9;&#x9; btnEliminarTrabajador_Selection_LogicalEvent ( &quot;event&quot; );&#xA;&#x9;&#x9; }&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;btnActualizarTrabajador = formToolkit.createButton(container,&quot;ActualizarTrabajador&quot;,SWT.NONE);&#xA;&#x9;&#x9;btnActualizarTrabajador.setBounds(262,113,84,22);&#xA;&#xA;&#x9;&#x9;btnActualizarTrabajador.setFont(SWTResourceManager.getFont(&quot;Segoe UI&quot;,10,SWT.NORMAL));&#xA;&#xA;&#x9;&#x9;btnActualizarTrabajador.addSelectionListener(new SelectionAdapter() {&#xA;&#xA;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;//TODO Action ButtonbtnActualizarTrabajadorde la view TrabajadorBase&#xA;&#x9;&#x9;&#x9;&#x9; btnActualizarTrabajador_Selection_LogicalEvent ( &quot;event&quot; );&#xA;&#x9;&#x9; }&#xA;&#x9;&#x9;});&#xA;        lblNombre = formToolkit.createLabel(container,&quot;nombre&quot;,SWT.NONE);&#xA;        lblNombre.setForeground(SWTResourceManager.getColor(0, 0, 139)) ;&#xA;        lblNombre.setBounds(36,111,70,24);&#xA;&#xA;        lblNombre.setFont(SWTResourceManager.getFont(&quot;Segoe UI&quot;,10,SWT.NORMAL));&#xA;&#xA;        lblId = formToolkit.createLabel(container,&quot;id&quot;,SWT.NONE);&#xA;        lblId.setForeground(SWTResourceManager.getColor(0, 0, 139)) ;&#xA;        lblId.setBounds(34,81,70,24);&#xA;&#xA;        lblId.setFont(SWTResourceManager.getFont(&quot;Segoe UI&quot;,10,SWT.NORMAL));&#xA;&#xA;&#x9;&#x9;btnAgregarTrabajador = formToolkit.createButton(container,&quot;AgregarTrabajador&quot;,SWT.NONE);&#xA;&#x9;&#x9;btnAgregarTrabajador.setBounds(262,65,84,22);&#xA;&#xA;&#x9;&#x9;btnAgregarTrabajador.setFont(SWTResourceManager.getFont(&quot;Segoe UI&quot;,10,SWT.NORMAL));&#xA;&#xA;&#x9;&#x9;btnAgregarTrabajador.addSelectionListener(new SelectionAdapter() {&#xA;&#xA;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;//TODO Action ButtonbtnAgregarTrabajadorde la view TrabajadorBase&#xA;&#x9;&#x9;&#x9;&#x9; btnAgregarTrabajador_Selection_LogicalEvent ( &quot;event&quot; );&#xA;&#x9;&#x9; }&#xA;&#x9;&#x9;});&#xA;        lblApellido = formToolkit.createLabel(container,&quot;apellido&quot;,SWT.NONE);&#xA;        lblApellido.setForeground(SWTResourceManager.getColor(0, 0, 139)) ;&#xA;        lblApellido.setBounds(36,139,70,24);&#xA;&#xA;        lblApellido.setFont(SWTResourceManager.getFont(&quot;Segoe UI&quot;,10,SWT.NORMAL));&#xA;&#xA;&#x9;&#x9;comboViewerTrabajador = new ComboViewer(container,SWT.NONE);&#xA;&#x9;&#x9;comboTrabajador =  comboViewerTrabajador.getCombo();&#xA;&#x9;&#x9;comboTrabajador.setBounds(108,23,120,24);&#xA;&#x9;&#x9;comboTrabajador.setFont(SWTResourceManager.getFont(&quot;Segoe UI&quot;,10,SWT.NORMAL));&#xA;&#xA;&#x9;&#x9;formToolkit.paintBordersFor(comboTrabajador);&#xA;&#xA;&#x9;&#x9;comboTrabajador.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;   public void widgetSelected(SelectionEvent e) { &#xA;&#x9;&#x9;    //TODO ActionCombo ViewTrabajador de la viewTrabajadorBase&#xA;&#x9;&#x9;     IStructuredSelection is = (IStructuredSelection) comboViewerTrabajador.getSelection();&#xA;&#x9;&#x9;   trabajadorViewModelSeleccionadoCombo = (cotizacion.ui.viewmodels.contenedortrabajadorbaseviewmodel.TrabajadorViewModel) is.getFirstElement();&#xA;&#x9;&#x9;   comboTrabajador_Selection_LogicalEvent ( &quot;event&quot; );&#xA;&#x9;&#x9;   }&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;comboTrabajador.addKeyListener(new KeyAdapter() {&#xA;&#x9;&#x9;   public void keyReleased(KeyEvent e) { &#xA;&#x9;&#x9;    //TODO ActionCombo ViewTrabajador de la viewTrabajadorBase&#xA;&#x9;&#x9;&#x9;&#x9;String texto = comboTrabajador.getText();&#xA;&#x9;&#x9;   &#x9;&#x9;comboTrabajador_ModifyText_LogicalEvent (texto);&#xA;&#x9;&#x9;   &#x9;&#x9;comboTrabajador.setText(texto);&#xA;&#x9;&#x9;   &#x9;&#x9;int stringLength = comboTrabajador.getText().length();&#xA;&#x9;&#x9;   &#x9;&#x9;comboTrabajador.setSelection(new Point (stringLength, stringLength));&#xA;&#x9;&#x9;   &#x9;&#x9;comboTrabajador.setVisibleItemCount(100);&#xA;&#x9;&#x9;   }&#x9;&#x9;&#xA;&#x9;&#x9;});&#xA;        lblTipo = formToolkit.createLabel(container,&quot;tipo&quot;,SWT.NONE);&#xA;        lblTipo.setForeground(SWTResourceManager.getColor(0, 0, 139)) ;&#xA;        lblTipo.setBounds(32,167,70,24);&#xA;&#xA;        lblTipo.setFont(SWTResourceManager.getFont(&quot;Segoe UI&quot;,10,SWT.NORMAL));&#xA;&#xA;&#x9;&#x9;textTipo = formToolkit.createText(container, &quot;New Text&quot;, SWT.NONE);&#xA;&#x9;&#x9;textTipo.setText(&quot;tipo&quot;);&#xA;&#x9;&#x9;textTipo.setBounds(122,169,120,20);&#xA;&#xA;&#x9;&#x9;textTipo.addKeyListener(new KeyAdapter() {&#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;public void keyReleased(KeyEvent e) {&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;//TODO Action textTipode la view TrabajadorBase&#xA;&#x9;&#x9;&#x9;&#x9;String texto = textTipo.getText();&#xA;&#x9;&#x9;&#x9;textTipo_ModifyText_LogicalEvent (texto);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;tableTrabajador = new TableViewer(container, SWT.BORDER | SWT.FULL_SELECTION);&#xA;&#x9;&#x9;tabletableTrabajador = tableTrabajador.getTable();&#xA;&#x9;&#x9;tabletableTrabajador.setLinesVisible(true);&#xA;&#x9;&#x9;tabletableTrabajador.setHeaderVisible(true);&#xA;&#x9;&#x9;tabletableTrabajador.setBounds(26,209,260,88);&#xA;&#x9;&#x9;tabletableTrabajador.setFont(SWTResourceManager.getFont(&quot;Segoe UI&quot;,10,SWT.NORMAL));&#xA;&#xA;&#x9;&#x9;formToolkit.paintBordersFor(tabletableTrabajador);&#xA;&#xA;&#x9;&#x9;TableViewerColumn  columId0 = new TableViewerColumn(tableTrabajador, SWT.NONE);&#xA;&#x9;&#x9;TableColumn tblclmncolumId0 = columId0.getColumn();&#xA;&#x9;&#x9;tblclmncolumId0.setWidth(100);&#xA;&#x9;&#x9;tblclmncolumId0 .setText(&quot;id&quot;);&#xA;&#xA;&#x9;&#x9;TableViewerColumn  columNombre1 = new TableViewerColumn(tableTrabajador, SWT.NONE);&#xA;&#x9;&#x9;TableColumn tblclmncolumNombre1 = columNombre1.getColumn();&#xA;&#x9;&#x9;tblclmncolumNombre1.setWidth(100);&#xA;&#x9;&#x9;tblclmncolumNombre1 .setText(&quot;nombre&quot;);&#xA;&#xA;&#x9;&#x9;TableViewerColumn  columApellido2 = new TableViewerColumn(tableTrabajador, SWT.NONE);&#xA;&#x9;&#x9;TableColumn tblclmncolumApellido2 = columApellido2.getColumn();&#xA;&#x9;&#x9;tblclmncolumApellido2.setWidth(100);&#xA;&#x9;&#x9;tblclmncolumApellido2 .setText(&quot;apellido&quot;);&#xA;&#xA;&#x9;&#x9;TableViewerColumn  columTipo3 = new TableViewerColumn(tableTrabajador, SWT.NONE);&#xA;&#x9;&#x9;TableColumn tblclmncolumTipo3 = columTipo3.getColumn();&#xA;&#x9;&#x9;tblclmncolumTipo3.setWidth(100);&#xA;&#x9;&#x9;tblclmncolumTipo3 .setText(&quot;tipo&quot;);&#xA;&#xA;&#x9;&#x9;tabletableTrabajador.addSelectionListener(new SelectionAdapter(){&#xA;&#x9;&#x9;    public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;    //TODO ActionTable ViewtableTrabajadorde la viewTrabajadorBase&#xA;&#x9;&#x9;        tableTrabajadorViewModelSeleccionadoTabla  = (cotizacion.ui.viewmodels.contenedortrabajadorbaseviewmodel.TrabajadorViewModel)e.item.getData();&#xA;&#x9;&#x9;        tableTrabajador_Selection_LogicalEvent ( &quot;event&quot; );&#xA;&#x9;&#x9;  } &#xA;});&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;initDataBindings();&#xA;          }catch (Exception e) {&#xA;        }&#xA;&#xA;&#x9;&#x9;viewPartLoadedAction();&#xA;&#x9;}&#xA;&#x9;public void setFocus() {&#xA;&#x9;&#x9;// Set the focus&#xA;&#x9;}&#xA;&#xA;      public void viewPartLoadedAction (){&#xA;             /**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : TrabajadorBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;      }&#xA;&#xA;      public void reboot (){&#xA;             constructorTrabajadorBaseViewPart();&#xA;      }&#xA;&#xA;      public void syncModel (){&#xA;             /**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : TrabajadorBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;      }&#xA;&#xA;      public void constructorTrabajadorBaseViewPart (){&#xA;             /**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : TrabajadorBaseViewPart&#xD;&#xA;    &#x9;   */&#xD;&#xA;    &#x9;  contenedortrabajadorBaseViewModel.updateViewModel();&#xA;    &#x9;  mfm.salvar();&#xA;      }&#xA;&#xA;      public void textNombre_ModifyText_LogicalEvent ( String  event ){&#xA;             /**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : ClienteBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;      }&#xA;&#xA;      public void textId_ModifyText_LogicalEvent ( String  event ){&#xA;             /**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : ClienteBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;      }&#xA;&#xA;      public void textApellido_ModifyText_LogicalEvent ( String  event ){&#xA;             /**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : ClienteBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;      }&#xA;&#xA;      public void btnEliminarTrabajador_Selection_LogicalEvent ( String  event ){&#xA;             /**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : ClienteBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;    &#x9;  contenedortrabajadorBaseViewModel.eliminarTrabajador();&#xA;    &#x9;  mfm.salvar();&#xA;      }&#xA;&#xA;      public void btnActualizarTrabajador_Selection_LogicalEvent ( String  event ){&#xA;             /**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : ClienteBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;    &#x9;  contenedortrabajadorBaseViewModel.actualizarTrabajador();&#xA;    &#x9;  mfm.salvar();&#xA;      }&#xA;&#xA;      public void btnAgregarTrabajador_Selection_LogicalEvent ( String  event ){&#xA;             /**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : ClienteBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;    &#x9;  contenedortrabajadorBaseViewModel.crearTrabajador();&#xA;    &#x9;  mfm.salvar();&#xA;      }&#xA;&#xA;      public void comboTrabajador_Selection_LogicalEvent ( String  event ){&#xA;             contenedortrabajadorBaseViewModel.setSelectedComboTrabajador(trabajadorViewModelSeleccionadoCombo);&#xA;             contenedortrabajadorBaseViewModel.actualizarCampoTexto();&#xA;      }&#xA;&#xA;      public void comboTrabajador_ModifyText_LogicalEvent ( String  event ){&#xA;             /**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : ClienteBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;      }&#xA;&#xA;      public void textTipo_ModifyText_LogicalEvent ( String  event ){&#xA;             /**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : TrabajadorBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;      }&#xA;&#xA;      public void tableTrabajador_Selection_LogicalEvent ( String  event ){&#xA;             contenedortrabajadorBaseViewModel.setSelectedTableTrabajador(tableTrabajadorViewModelSeleccionadoTabla);&#xA;      }&#xA;      protected DataBindingContext initDataBindings() {&#xA;//&#xA;        DataBindingContext bindingContext = new DataBindingContext();&#xA;        IObservableValue observeTexttextNombreObserveWidget = WidgetProperties.text(SWT.Modify).observe(textNombre);&#xA;        IObservableValue contenedortrabajadorBasetextNombreObserveValue = EMFObservables.observeValue(contenedortrabajadorBaseViewModel,cotizacion.ui.viewmodels.contenedortrabajadorbaseviewmodel.ContenedortrabajadorbaseviewmodelPackage.Literals.CONTENEDOR_TRABAJADOR_BASE_VIEW_MODEL__NOMBRE);&#xA;        bindingContext.bindValue(observeTexttextNombreObserveWidget,contenedortrabajadorBasetextNombreObserveValue, null, null);&#xA;        //&#xA;        IObservableValue observeTexttextIdObserveWidget = WidgetProperties.text(SWT.Modify).observe(textId);&#xA;        IObservableValue contenedortrabajadorBasetextIdObserveValue = EMFObservables.observeValue(contenedortrabajadorBaseViewModel,cotizacion.ui.viewmodels.contenedortrabajadorbaseviewmodel.ContenedortrabajadorbaseviewmodelPackage.Literals.CONTENEDOR_TRABAJADOR_BASE_VIEW_MODEL__ID);&#xA;        bindingContext.bindValue(observeTexttextIdObserveWidget,contenedortrabajadorBasetextIdObserveValue, null, null);&#xA;        //&#xA;        IObservableValue observeTexttextApellidoObserveWidget = WidgetProperties.text(SWT.Modify).observe(textApellido);&#xA;        IObservableValue contenedortrabajadorBasetextApellidoObserveValue = EMFObservables.observeValue(contenedortrabajadorBaseViewModel,cotizacion.ui.viewmodels.contenedortrabajadorbaseviewmodel.ContenedortrabajadorbaseviewmodelPackage.Literals.CONTENEDOR_TRABAJADOR_BASE_VIEW_MODEL__APELLIDO);&#xA;        bindingContext.bindValue(observeTexttextApellidoObserveWidget,contenedortrabajadorBasetextApellidoObserveValue, null, null);&#xA;        //&#xA;&#xA;      ObservableListContentProvider listContentProvider13= new ObservableListContentProvider();&#xA;        IObservableMap[] observeMaps13= EMFObservables.observeMaps(listContentProvider13.getKnownElements(),&#xA;        new EStructuralFeature[]{cotizacion.ui.viewmodels.contenedortrabajadorbaseviewmodel.ContenedortrabajadorbaseviewmodelPackage.Literals.TRABAJADOR_VIEW_MODEL__NOMBRE});&#xA;        comboViewerTrabajador.setLabelProvider(new ObservableMapLabelProvider(observeMaps13));&#xA;        comboViewerTrabajador.setContentProvider(listContentProvider13);&#xA;&#xA;        IObservableList observeList13= EMFObservables.observeList(Realm.getDefault(),contenedortrabajadorBaseViewModel,&#xA;        cotizacion.ui.viewmodels.contenedortrabajadorbaseviewmodel.ContenedortrabajadorbaseviewmodelPackage.Literals.CONTENEDOR_TRABAJADOR_BASE_VIEW_MODEL__LISTA_TRABAJADOR_VIEW_MODEL);&#xA;        comboViewerTrabajador.setInput(observeList13);&#xA;        //&#xA;        IObservableValue observeTexttextTipoObserveWidget = WidgetProperties.text(SWT.Modify).observe(textTipo);&#xA;        IObservableValue contenedortrabajadorBasetextTipoObserveValue = EMFObservables.observeValue(contenedortrabajadorBaseViewModel,cotizacion.ui.viewmodels.contenedortrabajadorbaseviewmodel.ContenedortrabajadorbaseviewmodelPackage.Literals.CONTENEDOR_TRABAJADOR_BASE_VIEW_MODEL__TIPO);&#xA;        bindingContext.bindValue(observeTexttextTipoObserveWidget,contenedortrabajadorBasetextTipoObserveValue, null, null);&#xA;        //&#xA;        ObservableListContentProvider listContentProviderTableTrabajadorTableViewer = new ObservableListContentProvider();&#xA;        IObservableMap[] observeMapsTableTrabajadorTableViewer= EMFObservables.observeMaps(listContentProviderTableTrabajadorTableViewer.getKnownElements(),&#xA;        new EStructuralFeature[]{cotizacion.ui.viewmodels.contenedortrabajadorbaseviewmodel.ContenedortrabajadorbaseviewmodelPackage.Literals.TRABAJADOR_VIEW_MODEL__ID,cotizacion.ui.viewmodels.contenedortrabajadorbaseviewmodel.ContenedortrabajadorbaseviewmodelPackage.Literals.TRABAJADOR_VIEW_MODEL__NOMBRE,cotizacion.ui.viewmodels.contenedortrabajadorbaseviewmodel.ContenedortrabajadorbaseviewmodelPackage.Literals.TRABAJADOR_VIEW_MODEL__APELLIDO,cotizacion.ui.viewmodels.contenedortrabajadorbaseviewmodel.ContenedortrabajadorbaseviewmodelPackage.Literals.TRABAJADOR_VIEW_MODEL__TIPO});&#xA;        tableTrabajador.setLabelProvider(new ObservableMapLabelProvider(observeMapsTableTrabajadorTableViewer));&#xA;        tableTrabajador.setContentProvider(listContentProviderTableTrabajadorTableViewer);&#xA;&#xA;        //&#xA;        IObservableList observeListTableTrabajadorTableViewer= EMFObservables.observeList(Realm.getDefault(),contenedortrabajadorBaseViewModel,&#xA;        cotizacion.ui.viewmodels.contenedortrabajadorbaseviewmodel.ContenedortrabajadorbaseviewmodelPackage.Literals.CONTENEDOR_TRABAJADOR_BASE_VIEW_MODEL__LISTA_TRABAJADOR_VIEW_MODEL);&#xA;        tableTrabajador.setInput(observeListTableTrabajadorTableViewer);&#xA;            //&#xA;&#xA;         return bindingContext;&#xA;//&#xA;      }&#xA;}&#xA;" type="No View" description="Insert a description" font="Segoe UI" stateFigure="No_mostrarMensaje" width="157" height="65" positionX="232" positionY="8" roleNameElementVM="theAsesor" nameUserInterfaceReference="" reused="true" estadoRoleName="DEFINIDO_POR_TITLE" idWidget="_MhpKkdSsEeyDluTmCDBPEQ" textColor="0" textSize="9" textStyle="false">
        <listModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_Mh8skdSsEeyDluTmCDBPEQ" name="viewPartLoadedAction" id="_Mh8skNSsEeyDluTmCDBPEQ" typeElement="Operation" body="/**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : TrabajadorBaseViewPart&#xD;&#xA;    &#x9;   */" visible="true"/>
        <listModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_Mh8sk9SsEeyDluTmCDBPEQ" name="constructorTrabajadorBaseViewPart" id="_Mh8sktSsEeyDluTmCDBPEQ" typeElement="Operation" body="/**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : TrabajadorBaseViewPart&#xD;&#xA;    &#x9;   */&#xD;&#xA;    &#x9;  contenedortrabajadorBaseViewModel.updateViewModel();&#xA;    &#x9;  mfm.salvar();" visible="true"/>
        <listModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_Mh8sldSsEeyDluTmCDBPEQ" name="reboot" id="_Mh8slNSsEeyDluTmCDBPEQ" typeElement="Operation" body="constructorTrabajadorBaseViewPart();" visible="true"/>
        <listModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_Mh8sl9SsEeyDluTmCDBPEQ" name="syncModel" id="_Mh8sltSsEeyDluTmCDBPEQ" typeElement="Operation" body="/**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : TrabajadorBaseViewPart&#xD;&#xA;    &#x9;   */" visible="true"/>
        <itsModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_Mh9TodSsEeyDluTmCDBPEQ" name="updateViewModel" id="_Mh9ToNSsEeyDluTmCDBPEQ" description="" typeElement="Operation" body="&#xD;&#xA;&#x9;&#x9;//TODO updateViewModel&#xD;&#xA;&#x9;&#x9;getTheUI().updateContenedorTrabajadorViewModel(this);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;" visible="true" returnTypeMethod=""/>
        <itsModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_Mh9To9SsEeyDluTmCDBPEQ" name="crearTrabajador" id="_Mh9TotSsEeyDluTmCDBPEQ" description="" typeElement="Operation" body="&#xD;&#xA;&#x9;&#x9;//TODO crearTrabajador&#xD;&#xA;&#x9;&#x9;getTheUI().crearTrabajador(this);&#xD;&#xA;&#x9;" visible="true" returnTypeMethod=""/>
        <itsModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_Mh9TpdSsEeyDluTmCDBPEQ" name="actualizarTrabajador" id="_Mh9TpNSsEeyDluTmCDBPEQ" description="" typeElement="Operation" body="&#xD;&#xA;&#x9;&#x9;//TODO actualizarTrabajador&#xD;&#xA;&#x9;&#x9;getTheUI().actualizarTrabajador(this);&#xD;&#xA;&#x9;" visible="true" returnTypeMethod=""/>
        <itsModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_Mh9Tp9SsEeyDluTmCDBPEQ" name="eliminarTrabajador" id="_Mh9TptSsEeyDluTmCDBPEQ" description="" typeElement="Operation" body="&#xD;&#xA;&#x9;&#x9;//TODO eliminarTrabajador&#xD;&#xA;&#x9;&#x9;getTheUI().eliminarTrabajador(this);&#xD;&#xA;&#x9;" visible="true" returnTypeMethod=""/>
        <itsModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_Mh9TqdSsEeyDluTmCDBPEQ" name="actualizarCampoTexto" id="_Mh9TqNSsEeyDluTmCDBPEQ" description="" typeElement="Operation" body="&#xD;&#xA;&#x9;&#x9;//TODO actualizarCampoTexto&#xD;&#xA;&#x9;&#x9;getTheUI().settearTrabajadorSelecionado(this);&#xD;&#xA;&#x9;" visible="true" returnTypeMethod=""/>
        <listIndividualWidge xmi:type="tooldataform.ui:Spinner" xmi:id="_MlH8YNSsEeyDluTmCDBPEQ" name="Trabajador" esteriotipoName="selectedComboTrabajador" nameVar="Trabajador" font="Segoe UI" stateFigure="No_mostrarMensaje" width="120" height="24" positionX="3" positionY="-1" hasViewModel="true" idElementReference="" nameUserInterfaceReference="" idAndroid="Selection#Modifytext#" sourceCode="contenedortrabajadorBaseViewModel.setSelectedComboTrabajador(trabajadorViewModelSeleccionadoCombo);&#xA;             contenedortrabajadorBaseViewModel.actualizarCampoTexto();" idWidget="_MliMENSsEeyDluTmCDBPEQ" textColor="0" textSize="9" textStyle="false">
          <listModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_MliMEtSsEeyDluTmCDBPEQ" name="comboTrabajadorFromTheAsesor_Selection_LogicalEvent" id="_MliMEdSsEeyDluTmCDBPEQ" typeElement="Operation" body="contenedorasesorViewModel.setSelectedComboTrabajador(trabajadorFromTheAsesorViewModelSeleccionadoCombo);" visible="true" returnTypeMethod="void">
            <listParametros xmi:type="tooldataform.pmoo:Atributo" xmi:id="_wMtGsNWaEey9WYMFkpQzVQ" name="event" type="String"/>
          </listModelElementCore>
          <listModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_MljaMNSsEeyDluTmCDBPEQ" name="comboTrabajadorFromTheAsesor_ModifyText_LogicalEvent" id="_MlizINSsEeyDluTmCDBPEQ" typeElement="Operation" body="/**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : ClienteBaseViewPart&#xD;&#xA;    &#x9;   */" visible="true" returnTypeMethod="void">
            <listParametros xmi:type="tooldataform.pmoo:Atributo" xmi:id="_wNvogNWaEey9WYMFkpQzVQ" name="event" type="String"/>
          </listModelElementCore>
          <theItem xmi:type="tooldataform.ui:ItemSpinner" xmi:id="_MlH8YdSsEeyDluTmCDBPEQ" name="nombre" nameVar="nombre" font="Segoe UI" stateFigure="No_mostrarMensaje" positionX="0" positionY="0" sourceCode="" idWidget="_MlqH4NSsEeyDluTmCDBPEQ" textColor="0" textSize="9" textStyle="false"/>
        </listIndividualWidge>
      </listGraphicalContainerWidget>
      <listGraphicalContainerWidget xmi:type="tooldataform.ui:Group" xmi:id="_00DB8NStEeyDluTmCDBPEQ" name="ClienteBase" esteriotipoName="ClienteBase" nameVar="cliente" documentation="package cotizacion.view.views;&#xA;import cotizacion.ui.UiPackage.Literals;&#xA;import org.eclipse.swt.custom.ScrolledComposite;&#xA;import cotizacion.ModelFactory;&#xA;import cotizacion.ui.*;&#xA;import cotizacion.ModelFactory;&#xA;import cotizacion.ui.viewmodels.contenedorclientebaseviewmodel.*;&#xA;import cotizacion.view.model.ModelFactoryModel;&#xA;import org.eclipse.wb.swt.SWTResourceManager;&#xA;import org.eclipse.ui.part.ViewPart;&#xA;import org.eclipse.jface.viewers.ISelectionChangedListener;&#xA;import org.eclipse.jface.viewers.IStructuredContentProvider;&#xA;import org.eclipse.jface.viewers.IStructuredSelection;&#xA;import org.eclipse.jface.action.MenuManager;&#xA;import org.eclipse.jface.action.StatusLineManager;&#xA;import org.eclipse.jface.action.ToolBarManager;&#xA;import org.eclipse.jface.window.ApplicationWindow;&#xA;import org.eclipse.swt.SWT;&#xA;import org.eclipse.swt.graphics.Point;&#xA;import org.eclipse.swt.widgets.Composite;&#xA;import org.eclipse.swt.widgets.Control;&#xA;import org.eclipse.swt.widgets.Display;&#xA;import org.eclipse.swt.widgets.Shell;&#xA;import org.eclipse.swt.widgets.Group;&#xA;import org.eclipse.swt.widgets.Table;&#xA;import org.eclipse.jface.viewers.TableViewer;&#xA;import org.eclipse.swt.widgets.TableColumn;&#xA;import org.eclipse.jface.viewers.TableViewerColumn;&#xA;import org.eclipse.swt.widgets.Combo;&#xA;import org.eclipse.jface.viewers.TreeViewer;import org.eclipse.jface.viewers.ComboViewer;&#xA;import org.eclipse.ui.forms.widgets.FormToolkit;&#xA;import org.eclipse.swt.widgets.Label;&#xA;import org.eclipse.swt.widgets.Text;&#xA;import org.eclipse.swt.widgets.Button;&#xA;import org.eclipse.swt.events.SelectionAdapter;&#xA;import org.eclipse.swt.events.SelectionEvent;&#xA;import org.eclipse.swt.events.ModifyListener;&#xA;import org.eclipse.swt.events.ModifyEvent;&#xA;import org.eclipse.swt.widgets.DateTime;&#xA;&#xA;import org.eclipse.core.databinding.DataBindingContext;&#xA;import org.eclipse.jface.databinding.viewers.ObservableListContentProvider;&#xA;import org.eclipse.core.databinding.observable.map.IObservableMap;&#xA;import org.eclipse.emf.databinding.EMFObservables;&#xA;import org.eclipse.emf.ecore.EStructuralFeature;&#xA;import org.eclipse.jface.databinding.viewers.ObservableMapLabelProvider;&#xA;import org.eclipse.core.databinding.observable.list.IObservableList;&#xA;import org.eclipse.core.databinding.observable.Realm;&#xA;import org.eclipse.core.databinding.observable.value.IObservableValue;&#xA;import org.eclipse.core.runtime.CoreException;&#xA;import org.eclipse.jface.databinding.swt.WidgetProperties;&#xA;import org.eclipse.swt.events.SelectionAdapter;&#xA;import org.eclipse.swt.events.SelectionEvent;&#xA;import org.eclipse.swt.events.MouseAdapter;import org.eclipse.swt.events.MouseEvent;import org.eclipse.swt.widgets.TabFolder;import org.eclipse.swt.widgets.TabItem;import org.eclipse.swt.SWT;import org.eclipse.swt.dnd.DND;import org.eclipse.swt.dnd.Transfer;import org.eclipse.jface.resource.ImageDescriptor;import org.eclipse.jface.action.IMenuListener;import org.eclipse.jface.action.IMenuManager;import org.eclipse.jface.action.IToolBarManager;import org.eclipse.jface.action.MenuManager;import org.eclipse.jface.dialogs.MessageDialog;import org.eclipse.swt.widgets.Tree;import org.eclipse.swt.widgets.TreeColumn;import org.eclipse.ui.forms.widgets.ScrolledForm;import org.eclipse.core.runtime.FileLocator;import org.eclipse.core.runtime.IPath;import org.eclipse.core.runtime.Path;import org.eclipse.core.runtime.Platform;import org.osgi.framework.Bundle;import org.eclipse.swt.events.KeyAdapter;import org.eclipse.swt.events.KeyEvent;import org.eclipse.swt.events.VerifyEvent;&#xA;/**&#xD;&#xA; * &#xD;&#xA; * @author Grupo SINFOCI &#xD;&#xA; *&#xD;&#xA; */&#xA;public class ClienteBaseViewPart  extends ViewPart {&#xA;&#xA;&#xA;&#x9;public static final String ID = &quot;cotizacion.view.views.ClienteBase&quot;;&#xA;&#xA;&#x9;ModelFactoryModel mfm;&#xA;&#x9;UI ui;&#xA;&#x9;ModelFactory modelFactory;&#xA;&#x9;private DataBindingContext m_bindingContext;&#xA;&#x9;cotizacion.ui.viewmodels.contenedorclientebaseviewmodel.ContenedorClienteBaseViewModel   contenedorclienteBaseViewModel;&#xA;&#x9;public ComboViewer comboViewerCliente;&#xA; &#x9;public Combo comboCliente; &#xA;&#x9;cotizacion.ui.viewmodels.contenedorclientebaseviewmodel.ClienteViewModel   clienteViewModelSeleccionadoCombo; &#xA;&#x9;public Button btnAgregarCliente;&#xA; &#x9;public Button btnEliminarCliente;&#xA; &#x9;public Button btnActualizarCliente;&#xA; &#x9;public Label lblId; &#xA;&#x9;public Label lblNombre; &#xA;&#x9;public Label lblApellido; &#xA;&#x9;public Text textId; &#xA;&#x9;public Text textNombre; &#xA;&#x9;public Text textApellido; &#xA;&#x9;public Table tabletableCliente;&#xA; &#x9;public TableViewer tableCliente;&#xA; &#x9;cotizacion.ui.viewmodels.contenedorclientebaseviewmodel.ClienteViewModel   tableClienteViewModelSeleccionadoTabla; &#xA;&#x9;private final FormToolkit formToolkit = new FormToolkit(Display.getDefault());&#xA;&#xA;&#x9;public ClienteBaseViewPart() {&#xA;&#x9;  try {&#xA;&#x9;    mfm = ModelFactoryModel.getInstance();&#xA;&#x9;    mfm.setClienteBaseViewPart(this);&#xA;&#x9;    cargarContenedores(); &#xA;&#x9;    syncModel();&#xA;&#x9;    constructorClienteBaseViewPart();&#xA;&#x9;  }&#xA;&#x9;  catch (Exception e) {&#xA;&#x9;  }&#xA;&#x9;}&#xA;&#x9;public void cargarContenedores(){&#xA;&#x9;  mfm &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;= ModelFactoryModel.getInstance(); &#xA;&#x9;  contenedorclienteBaseViewModel = mfm.getTheContenedorClienteBaseViewModel();&#xA;&#x9;  &#xA;         }&#xA;&#x9;public void updateData(){&#xA;&#x9;  if(!mfm.getEstado().equals(&quot;ACTUALIZADO&quot;)) {&#xA;&#x9;          mfm.cargar();&#xA;&#x9;  }&#xA;&#x9;  cargarContenedores();&#xA;&#x9;   try {&#xA;&#x9;       initDataBindings();&#xA;&#x9;   } catch (Exception e) {&#xA;&#x9;   }&#xA;&#x9;}&#xA;&#x9;public void createPartControl(Composite parent) {&#xA;&#x9;&#x9;ScrolledComposite sc = new ScrolledComposite(parent, SWT.H_SCROLL |&#x9;SWT.V_SCROLL | SWT.BORDER);&#xA;&#x9;&#x9;Composite container = formToolkit.createComposite(sc, SWT.NONE);&#xA;&#xA;&#x9;&#x9;sc.setContent(container);&#xA;&#x9;&#x9;sc.setExpandHorizontal(true);&#xA;&#x9;&#x9;sc.setExpandVertical(true);&#xA;&#x9;&#x9;sc.setMinSize(container.computeSize(429, 381));&#xA;&#x9;&#x9;formToolkit.paintBordersFor(container);&#xA;&#xA;&#x9;&#x9;comboViewerCliente = new ComboViewer(container,SWT.NONE);&#xA;&#x9;&#x9;comboCliente =  comboViewerCliente.getCombo();&#xA;&#x9;&#x9;comboCliente.setBounds(109,23,120,24);&#xA;&#x9;&#x9;comboCliente.setFont(SWTResourceManager.getFont(&quot;Segoe UI&quot;,10,SWT.NORMAL));&#xA;&#xA;&#x9;&#x9;formToolkit.paintBordersFor(comboCliente);&#xA;&#xA;&#x9;&#x9;comboCliente.addSelectionListener(new SelectionAdapter() {&#xA;&#x9;&#x9;   public void widgetSelected(SelectionEvent e) { &#xA;&#x9;&#x9;    //TODO ActionCombo ViewCliente de la viewClienteBase&#xA;&#x9;&#x9;     IStructuredSelection is = (IStructuredSelection) comboViewerCliente.getSelection();&#xA;&#x9;&#x9;   clienteViewModelSeleccionadoCombo = (cotizacion.ui.viewmodels.contenedorclientebaseviewmodel.ClienteViewModel) is.getFirstElement();&#xA;&#x9;&#x9;   comboCliente_Selection_LogicalEvent ( &quot;event&quot; );&#xA;&#x9;&#x9;   }&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;comboCliente.addKeyListener(new KeyAdapter() {&#xA;&#x9;&#x9;   public void keyReleased(KeyEvent e) { &#xA;&#x9;&#x9;    //TODO ActionCombo ViewCliente de la viewClienteBase&#xA;&#x9;&#x9;&#x9;&#x9;String texto = comboCliente.getText();&#xA;&#x9;&#x9;   &#x9;&#x9;comboCliente_ModifyText_LogicalEvent (texto);&#xA;&#x9;&#x9;   &#x9;&#x9;comboCliente.setText(texto);&#xA;&#x9;&#x9;   &#x9;&#x9;int stringLength = comboCliente.getText().length();&#xA;&#x9;&#x9;   &#x9;&#x9;comboCliente.setSelection(new Point (stringLength, stringLength));&#xA;&#x9;&#x9;   &#x9;&#x9;comboCliente.setVisibleItemCount(100);&#xA;&#x9;&#x9;   }&#x9;&#x9;&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;btnAgregarCliente = formToolkit.createButton(container,&quot;AgregarCliente&quot;,SWT.NONE);&#xA;&#x9;&#x9;btnAgregarCliente.setBounds(263,65,85,22);&#xA;&#xA;&#x9;&#x9;btnAgregarCliente.setFont(SWTResourceManager.getFont(&quot;Segoe UI&quot;,10,SWT.NORMAL));&#xA;&#xA;&#x9;&#x9;btnAgregarCliente.addSelectionListener(new SelectionAdapter() {&#xA;&#xA;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;//TODO Action ButtonbtnAgregarClientede la view ClienteBase&#xA;&#x9;&#x9;&#x9;&#x9; btnAgregarCliente_Selection_LogicalEvent ( &quot;event&quot; );&#xA;&#x9;&#x9; }&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;btnEliminarCliente = formToolkit.createButton(container,&quot;EliminarCliente&quot;,SWT.NONE);&#xA;&#x9;&#x9;btnEliminarCliente.setBounds(263,89,85,22);&#xA;&#xA;&#x9;&#x9;btnEliminarCliente.setFont(SWTResourceManager.getFont(&quot;Segoe UI&quot;,10,SWT.NORMAL));&#xA;&#xA;&#x9;&#x9;btnEliminarCliente.addSelectionListener(new SelectionAdapter() {&#xA;&#xA;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;//TODO Action ButtonbtnEliminarClientede la view ClienteBase&#xA;&#x9;&#x9;&#x9;&#x9; btnEliminarCliente_Selection_LogicalEvent ( &quot;event&quot; );&#xA;&#x9;&#x9; }&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;btnActualizarCliente = formToolkit.createButton(container,&quot;ActualizarCliente&quot;,SWT.NONE);&#xA;&#x9;&#x9;btnActualizarCliente.setBounds(263,113,85,22);&#xA;&#xA;&#x9;&#x9;btnActualizarCliente.setFont(SWTResourceManager.getFont(&quot;Segoe UI&quot;,10,SWT.NORMAL));&#xA;&#xA;&#x9;&#x9;btnActualizarCliente.addSelectionListener(new SelectionAdapter() {&#xA;&#xA;&#x9;&#x9;public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;&#x9;&#x9;//TODO Action ButtonbtnActualizarClientede la view ClienteBase&#xA;&#x9;&#x9;&#x9;&#x9; btnActualizarCliente_Selection_LogicalEvent ( &quot;event&quot; );&#xA;&#x9;&#x9; }&#xA;&#x9;&#x9;});&#xA;        lblId = formToolkit.createLabel(container,&quot;id&quot;,SWT.NONE);&#xA;        lblId.setForeground(SWTResourceManager.getColor(0, 0, 139)) ;&#xA;        lblId.setBounds(35,82,70,24);&#xA;&#xA;        lblId.setFont(SWTResourceManager.getFont(&quot;Segoe UI&quot;,10,SWT.NORMAL));&#xA;&#xA;        lblNombre = formToolkit.createLabel(container,&quot;nombre&quot;,SWT.NONE);&#xA;        lblNombre.setForeground(SWTResourceManager.getColor(0, 0, 139)) ;&#xA;        lblNombre.setBounds(36,111,70,24);&#xA;&#xA;        lblNombre.setFont(SWTResourceManager.getFont(&quot;Segoe UI&quot;,10,SWT.NORMAL));&#xA;&#xA;        lblApellido = formToolkit.createLabel(container,&quot;apellido&quot;,SWT.NONE);&#xA;        lblApellido.setForeground(SWTResourceManager.getColor(0, 0, 139)) ;&#xA;        lblApellido.setBounds(36,139,70,24);&#xA;&#xA;        lblApellido.setFont(SWTResourceManager.getFont(&quot;Segoe UI&quot;,10,SWT.NORMAL));&#xA;&#xA;&#x9;&#x9;textId = formToolkit.createText(container, &quot;New Text&quot;, SWT.NONE);&#xA;&#x9;&#x9;textId.setText(&quot;id&quot;);&#xA;&#x9;&#x9;textId.setBounds(122,84,120,20);&#xA;&#xA;&#x9;&#x9;textId.addKeyListener(new KeyAdapter() {&#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;public void keyReleased(KeyEvent e) {&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;//TODO Action textIdde la view ClienteBase&#xA;&#x9;&#x9;&#x9;&#x9;String texto = textId.getText();&#xA;&#x9;&#x9;&#x9;textId_ModifyText_LogicalEvent (texto);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;textNombre = formToolkit.createText(container, &quot;New Text&quot;, SWT.NONE);&#xA;&#x9;&#x9;textNombre.setText(&quot;nombre&quot;);&#xA;&#x9;&#x9;textNombre.setBounds(122,113,120,20);&#xA;&#xA;&#x9;&#x9;textNombre.addKeyListener(new KeyAdapter() {&#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;public void keyReleased(KeyEvent e) {&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;//TODO Action textNombrede la view ClienteBase&#xA;&#x9;&#x9;&#x9;&#x9;String texto = textNombre.getText();&#xA;&#x9;&#x9;&#x9;textNombre_ModifyText_LogicalEvent (texto);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;textApellido = formToolkit.createText(container, &quot;New Text&quot;, SWT.NONE);&#xA;&#x9;&#x9;textApellido.setText(&quot;apellido&quot;);&#xA;&#x9;&#x9;textApellido.setBounds(122,141,120,20);&#xA;&#xA;&#x9;&#x9;textApellido.addKeyListener(new KeyAdapter() {&#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;public void keyReleased(KeyEvent e) {&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;//TODO Action textApellidode la view ClienteBase&#xA;&#x9;&#x9;&#x9;&#x9;String texto = textApellido.getText();&#xA;&#x9;&#x9;&#x9;textApellido_ModifyText_LogicalEvent (texto);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;});&#xA;&#x9;&#x9;tableCliente = new TableViewer(container, SWT.BORDER | SWT.FULL_SELECTION);&#xA;&#x9;&#x9;tabletableCliente = tableCliente.getTable();&#xA;&#x9;&#x9;tabletableCliente.setLinesVisible(true);&#xA;&#x9;&#x9;tabletableCliente.setHeaderVisible(true);&#xA;&#x9;&#x9;tabletableCliente.setBounds(46,191,261,89);&#xA;&#x9;&#x9;tabletableCliente.setFont(SWTResourceManager.getFont(&quot;Segoe UI&quot;,10,SWT.NORMAL));&#xA;&#xA;&#x9;&#x9;formToolkit.paintBordersFor(tabletableCliente);&#xA;&#xA;&#x9;&#x9;TableViewerColumn  columId0 = new TableViewerColumn(tableCliente, SWT.NONE);&#xA;&#x9;&#x9;TableColumn tblclmncolumId0 = columId0.getColumn();&#xA;&#x9;&#x9;tblclmncolumId0.setWidth(100);&#xA;&#x9;&#x9;tblclmncolumId0 .setText(&quot;id&quot;);&#xA;&#xA;&#x9;&#x9;TableViewerColumn  columNombre1 = new TableViewerColumn(tableCliente, SWT.NONE);&#xA;&#x9;&#x9;TableColumn tblclmncolumNombre1 = columNombre1.getColumn();&#xA;&#x9;&#x9;tblclmncolumNombre1.setWidth(100);&#xA;&#x9;&#x9;tblclmncolumNombre1 .setText(&quot;nombre&quot;);&#xA;&#xA;&#x9;&#x9;TableViewerColumn  columApellido2 = new TableViewerColumn(tableCliente, SWT.NONE);&#xA;&#x9;&#x9;TableColumn tblclmncolumApellido2 = columApellido2.getColumn();&#xA;&#x9;&#x9;tblclmncolumApellido2.setWidth(100);&#xA;&#x9;&#x9;tblclmncolumApellido2 .setText(&quot;apellido&quot;);&#xA;&#xA;&#x9;&#x9;tabletableCliente.addSelectionListener(new SelectionAdapter(){&#xA;&#x9;&#x9;    public void widgetSelected(SelectionEvent e) {&#xA;&#x9;&#x9;    //TODO ActionTable ViewtableClientede la viewClienteBase&#xA;&#x9;&#x9;        tableClienteViewModelSeleccionadoTabla  = (cotizacion.ui.viewmodels.contenedorclientebaseviewmodel.ClienteViewModel)e.item.getData();&#xA;&#x9;&#x9;        tableCliente_Selection_LogicalEvent ( &quot;event&quot; );&#xA;&#x9;&#x9;  } &#xA;});&#xA;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;initDataBindings();&#xA;          }catch (Exception e) {&#xA;        }&#xA;&#xA;&#x9;&#x9;viewPartLoadedAction();&#xA;&#x9;}&#xA;&#x9;public void setFocus() {&#xA;&#x9;&#x9;// Set the focus&#xA;&#x9;}&#xA;&#xA;      public void viewPartLoadedAction (){&#xA;             /**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : ClienteBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;      }&#xA;&#xA;      public void reboot (){&#xA;             constructorClienteBaseViewPart();&#xA;      }&#xA;&#xA;      public void syncModel (){&#xA;             /**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : ClienteBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;      }&#xA;&#xA;      public void constructorClienteBaseViewPart (){&#xA;             /**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : ClienteBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;    &#x9;  &#xA;    &#x9;  contenedorclienteBaseViewModel.updateViewModel();&#xA;    &#x9;  mfm.salvar();&#xA;      }&#xA;&#xA;      public void comboCliente_Selection_LogicalEvent ( String  event ){&#xA;             contenedorclienteBaseViewModel.setSelectedComboCliente(clienteViewModelSeleccionadoCombo);&#xA;      }&#xA;&#xA;      public void comboCliente_ModifyText_LogicalEvent ( String  event ){&#xA;             /**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : ClienteBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;    &#x9;  &#xA;      }&#xA;&#xA;      public void btnAgregarCliente_Selection_LogicalEvent ( String  event ){&#xA;             /**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : ClienteBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;    &#x9;  contenedorclienteBaseViewModel.crearCliente();&#xA;    &#x9;  mfm.salvar();&#xA;      }&#xA;&#xA;      public void btnEliminarCliente_Selection_LogicalEvent ( String  event ){&#xA;             /**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : ClienteBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;    &#x9;  contenedorclienteBaseViewModel.eliminarCliente();&#xA;    &#x9;  mfm.salvar();&#xA;      }&#xA;&#xA;      public void btnActualizarCliente_Selection_LogicalEvent ( String  event ){&#xA;             /**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : ClienteBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;    &#x9;  &#xA;    &#x9;  contenedorclienteBaseViewModel.actualizarCliente();&#xA;    &#x9;  mfm.salvar();&#xA;      }&#xA;&#xA;      public void textId_ModifyText_LogicalEvent ( String  event ){&#xA;             /**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : ClienteBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;      }&#xA;&#xA;      public void textNombre_ModifyText_LogicalEvent ( String  event ){&#xA;             /**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : ClienteBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;      }&#xA;&#xA;      public void textApellido_ModifyText_LogicalEvent ( String  event ){&#xA;             /**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : ClienteBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;      }&#xA;&#xA;      public void tableCliente_Selection_LogicalEvent ( String  event ){&#xA;             contenedorclienteBaseViewModel.setSelectedTableCliente(tableClienteViewModelSeleccionadoTabla);&#xA;      }&#xA;      protected DataBindingContext initDataBindings() {&#xA;//&#xA;        DataBindingContext bindingContext = new DataBindingContext();&#xA;&#xA;      ObservableListContentProvider listContentProvider7= new ObservableListContentProvider();&#xA;        IObservableMap[] observeMaps7= EMFObservables.observeMaps(listContentProvider7.getKnownElements(),&#xA;        new EStructuralFeature[]{cotizacion.ui.viewmodels.contenedorclientebaseviewmodel.ContenedorclientebaseviewmodelPackage.Literals.CLIENTE_VIEW_MODEL__NOMBRE});&#xA;        comboViewerCliente.setLabelProvider(new ObservableMapLabelProvider(observeMaps7));&#xA;        comboViewerCliente.setContentProvider(listContentProvider7);&#xA;&#xA;        IObservableList observeList7= EMFObservables.observeList(Realm.getDefault(),contenedorclienteBaseViewModel,&#xA;        cotizacion.ui.viewmodels.contenedorclientebaseviewmodel.ContenedorclientebaseviewmodelPackage.Literals.CONTENEDOR_CLIENTE_BASE_VIEW_MODEL__LISTA_CLIENTE_VIEW_MODEL);&#xA;        comboViewerCliente.setInput(observeList7);&#xA;        //&#xA;        IObservableValue observeTexttextIdObserveWidget = WidgetProperties.text(SWT.Modify).observe(textId);&#xA;        IObservableValue contenedorclienteBasetextIdObserveValue = EMFObservables.observeValue(contenedorclienteBaseViewModel,cotizacion.ui.viewmodels.contenedorclientebaseviewmodel.ContenedorclientebaseviewmodelPackage.Literals.CONTENEDOR_CLIENTE_BASE_VIEW_MODEL__ID);&#xA;        bindingContext.bindValue(observeTexttextIdObserveWidget,contenedorclienteBasetextIdObserveValue, null, null);&#xA;        //&#xA;        IObservableValue observeTexttextNombreObserveWidget = WidgetProperties.text(SWT.Modify).observe(textNombre);&#xA;        IObservableValue contenedorclienteBasetextNombreObserveValue = EMFObservables.observeValue(contenedorclienteBaseViewModel,cotizacion.ui.viewmodels.contenedorclientebaseviewmodel.ContenedorclientebaseviewmodelPackage.Literals.CONTENEDOR_CLIENTE_BASE_VIEW_MODEL__NOMBRE);&#xA;        bindingContext.bindValue(observeTexttextNombreObserveWidget,contenedorclienteBasetextNombreObserveValue, null, null);&#xA;        //&#xA;        IObservableValue observeTexttextApellidoObserveWidget = WidgetProperties.text(SWT.Modify).observe(textApellido);&#xA;        IObservableValue contenedorclienteBasetextApellidoObserveValue = EMFObservables.observeValue(contenedorclienteBaseViewModel,cotizacion.ui.viewmodels.contenedorclientebaseviewmodel.ContenedorclientebaseviewmodelPackage.Literals.CONTENEDOR_CLIENTE_BASE_VIEW_MODEL__APELLIDO);&#xA;        bindingContext.bindValue(observeTexttextApellidoObserveWidget,contenedorclienteBasetextApellidoObserveValue, null, null);&#xA;        //&#xA;        ObservableListContentProvider listContentProviderTableClienteTableViewer = new ObservableListContentProvider();&#xA;        IObservableMap[] observeMapsTableClienteTableViewer= EMFObservables.observeMaps(listContentProviderTableClienteTableViewer.getKnownElements(),&#xA;        new EStructuralFeature[]{cotizacion.ui.viewmodels.contenedorclientebaseviewmodel.ContenedorclientebaseviewmodelPackage.Literals.CLIENTE_VIEW_MODEL__ID,cotizacion.ui.viewmodels.contenedorclientebaseviewmodel.ContenedorclientebaseviewmodelPackage.Literals.CLIENTE_VIEW_MODEL__NOMBRE,cotizacion.ui.viewmodels.contenedorclientebaseviewmodel.ContenedorclientebaseviewmodelPackage.Literals.CLIENTE_VIEW_MODEL__APELLIDO});&#xA;        tableCliente.setLabelProvider(new ObservableMapLabelProvider(observeMapsTableClienteTableViewer));&#xA;        tableCliente.setContentProvider(listContentProviderTableClienteTableViewer);&#xA;&#xA;        //&#xA;        IObservableList observeListTableClienteTableViewer= EMFObservables.observeList(Realm.getDefault(),contenedorclienteBaseViewModel,&#xA;        cotizacion.ui.viewmodels.contenedorclientebaseviewmodel.ContenedorclientebaseviewmodelPackage.Literals.CONTENEDOR_CLIENTE_BASE_VIEW_MODEL__LISTA_CLIENTE_VIEW_MODEL);&#xA;        tableCliente.setInput(observeListTableClienteTableViewer);&#xA;            //&#xA;&#xA;         return bindingContext;&#xA;//&#xA;      }&#xA;}&#xA;" type="No View" description="Insert a description" font="Segoe UI" stateFigure="No_mostrarMensaje" width="184" height="71" positionX="22" positionY="8" roleNameElementVM="theCliente" nameUserInterfaceReference="" reused="true" estadoRoleName="DEFINIDO_POR_TITLE" idWidget="_00DB8dStEeyDluTmCDBPEQ" textColor="0" textSize="9" textStyle="false">
        <listModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_00V84dStEeyDluTmCDBPEQ" name="viewPartLoadedAction" id="_00V84NStEeyDluTmCDBPEQ" typeElement="Operation" body="/**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : ClienteBaseViewPart&#xD;&#xA;    &#x9;   */" visible="true"/>
        <listModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_00V849StEeyDluTmCDBPEQ" name="constructorClienteBaseViewPart" id="_00V84tStEeyDluTmCDBPEQ" typeElement="Operation" body="/**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : ClienteBaseViewPart&#xD;&#xA;    &#x9;   */&#xA;    &#x9;  &#xA;    &#x9;  contenedorclienteBaseViewModel.updateViewModel();&#xA;    &#x9;  mfm.salvar();" visible="true"/>
        <listModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_00V85dStEeyDluTmCDBPEQ" name="reboot" id="_00V85NStEeyDluTmCDBPEQ" typeElement="Operation" body="constructorClienteBaseViewPart();" visible="true"/>
        <listModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_00V859StEeyDluTmCDBPEQ" name="syncModel" id="_00V85tStEeyDluTmCDBPEQ" typeElement="Operation" body="/**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : ClienteBaseViewPart&#xD;&#xA;    &#x9;   */" visible="true"/>
        <itsModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_00V86dStEeyDluTmCDBPEQ" name="updateViewModel" id="_00V86NStEeyDluTmCDBPEQ" description="" typeElement="Operation" body="&#xD;&#xA;&#x9;&#x9;//TODO updateViewModel&#xD;&#xA;&#x9;&#x9;getTheUI().updateContenedorClienteViewModel(this);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;" visible="true" returnTypeMethod=""/>
        <itsModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_00V869StEeyDluTmCDBPEQ" name="crearCliente" id="_00V86tStEeyDluTmCDBPEQ" description="" typeElement="Operation" body="&#xD;&#xA;&#x9;&#x9;//TODO crearCliente&#xD;&#xA;&#x9;&#x9;getTheUI().crearCliente(this);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;" visible="true" returnTypeMethod=""/>
        <itsModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_00V87dStEeyDluTmCDBPEQ" name="actualizarCliente" id="_00V87NStEeyDluTmCDBPEQ" documentation="" description="" typeElement="Operation" body="&#xD;&#xA;&#x9;&#x9;//TODO actualizarCliente&#xD;&#xA;&#x9;&#x9;getTheUI().actualizarCliente(this);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;" visible="true" returnTypeMethod=""/>
        <itsModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_00V879StEeyDluTmCDBPEQ" name="eliminarCliente" id="_00V87tStEeyDluTmCDBPEQ" description="" typeElement="Operation" body="&#xD;&#xA;&#x9;&#x9;//TODO eliminarCliente&#xD;&#xA;&#x9;&#x9;getTheUI().eliminarCliente(this);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;" visible="true" returnTypeMethod=""/>
        <itsModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_00V88dStEeyDluTmCDBPEQ" name="actualizarCampoTexto" id="_00V88NStEeyDluTmCDBPEQ" description="" typeElement="Operation" body="&#xD;&#xA;&#x9;&#x9;//TODO actualizarCampoTexto&#xD;&#xA;&#x9;&#x9;getTheUI().settearClienteSelecionado(this);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;" visible="true" returnTypeMethod=""/>
        <listIndividualWidge xmi:type="tooldataform.ui:Spinner" xmi:id="_00V88tStEeyDluTmCDBPEQ" name="Cliente" esteriotipoName="selectedComboCliente" nameVar="Cliente" font="Segoe UI" stateFigure="No_mostrarMensaje" width="120" height="24" positionX="29" positionY="1" hasViewModel="true" idElementReference="" nameUserInterfaceReference="" idAndroid="Selection#Modifytext#" sourceCode="contenedorclienteBaseViewModel.setSelectedComboCliente(clienteViewModelSeleccionadoCombo);" idWidget="_00yo0NStEeyDluTmCDBPEQ" textColor="0" textSize="9" textStyle="false">
          <listModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_00yo0tStEeyDluTmCDBPEQ" name="comboClienteFromTheCliente_Selection_LogicalEvent" id="_00yo0dStEeyDluTmCDBPEQ" typeElement="Operation" body="contenedorclienteViewModel.setSelectedComboCliente(clienteFromTheClienteViewModelSeleccionadoCombo);" visible="true" returnTypeMethod="void">
            <listParametros xmi:type="tooldataform.pmoo:Atributo" xmi:id="_wOf2cNWaEey9WYMFkpQzVQ" name="event" type="String"/>
          </listModelElementCore>
          <listModelElementCore xmi:type="tooldataform.pmoo:Metodo" xmi:id="_00yo1dStEeyDluTmCDBPEQ" name="comboClienteFromTheCliente_ModifyText_LogicalEvent" id="_00yo1NStEeyDluTmCDBPEQ" typeElement="Operation" body="/**&#xD;&#xA;    &#x9;   * TODO El código de esta sección se sincroniza&#xD;&#xA;    &#x9;   * con el semantic de la clase : ClienteBaseViewPart&#xD;&#xA;    &#x9;   */" visible="true" returnTypeMethod="void">
            <listParametros xmi:type="tooldataform.pmoo:Atributo" xmi:id="_wPPdUNWaEey9WYMFkpQzVQ" name="event" type="String"/>
          </listModelElementCore>
          <theItem xmi:type="tooldataform.ui:ItemSpinner" xmi:id="_00V889StEeyDluTmCDBPEQ" name="nombre" nameVar="nombre" font="Segoe UI" stateFigure="No_mostrarMensaje" positionX="0" positionY="0" sourceCode="" idWidget="_00yo19StEeyDluTmCDBPEQ" textColor="0" textSize="9" textStyle="false"/>
        </listIndividualWidge>
      </listGraphicalContainerWidget>
    </theUserInterface>
  </tooldataform.ui:UI_Diagram>
  <notation:Diagram xmi:id="_yMYHANSrEeyDluTmCDBPEQ" type="MetamodelodataformUIdiagram" element="_yG2GwNSrEeyDluTmCDBPEQ" name="ViewPart: CotizacionBase" measurementUnit="Pixel">
    <children xmi:type="notation:Node" xmi:id="_zHd2QNSrEeyDluTmCDBPEQ" type="2001" element="_yG5KENSrEeyDluTmCDBPEQ">
      <children xmi:type="notation:DecorationNode" xmi:id="_zHkj8NSrEeyDluTmCDBPEQ" type="5028"/>
      <children xmi:type="notation:BasicCompartment" xmi:id="_zHmZINSrEeyDluTmCDBPEQ" type="7001">
        <children xmi:type="notation:Node" xmi:id="_MhqYsNSsEeyDluTmCDBPEQ" type="3005" element="_MhpKkNSsEeyDluTmCDBPEQ">
          <children xmi:type="notation:DecorationNode" xmi:id="_Mhrm0NSsEeyDluTmCDBPEQ" type="5025"/>
          <children xmi:type="notation:BasicCompartment" xmi:id="_Mhrm0dSsEeyDluTmCDBPEQ" type="7005">
            <children xmi:type="notation:Node" xmi:id="_MlJxkNSsEeyDluTmCDBPEQ" type="3012" element="_MlH8YNSsEeyDluTmCDBPEQ">
              <children xmi:type="notation:DecorationNode" xmi:id="_MlKYoNSsEeyDluTmCDBPEQ" type="5010"/>
              <children xmi:type="notation:DecorationNode" xmi:id="_MlK_sNSsEeyDluTmCDBPEQ" visible="false" type="7008">
                <styles xmi:type="notation:SortingStyle" xmi:id="_MlK_sdSsEeyDluTmCDBPEQ"/>
                <styles xmi:type="notation:FilteringStyle" xmi:id="_MlK_stSsEeyDluTmCDBPEQ"/>
              </children>
              <styles xmi:type="notation:DescriptionStyle" xmi:id="_MlJxkdSsEeyDluTmCDBPEQ"/>
              <styles xmi:type="notation:FontStyle" xmi:id="_MlJxktSsEeyDluTmCDBPEQ" fontName="Segoe UI"/>
              <styles xmi:type="notation:FillStyle" xmi:id="_MlJxk9SsEeyDluTmCDBPEQ"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_MlJxlNSsEeyDluTmCDBPEQ" x="3" y="-1" width="120" height="24"/>
            </children>
          </children>
          <styles xmi:type="notation:DescriptionStyle" xmi:id="_Mhq_wNSsEeyDluTmCDBPEQ"/>
          <styles xmi:type="notation:FontStyle" xmi:id="_Mhq_wdSsEeyDluTmCDBPEQ" fontName="Segoe UI"/>
          <styles xmi:type="notation:FillStyle" xmi:id="_Mhq_wtSsEeyDluTmCDBPEQ"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_Mhq_w9SsEeyDluTmCDBPEQ" x="232" y="8" width="157" height="65"/>
        </children>
        <children xmi:type="notation:Node" xmi:id="_UTD4cNSsEeyDluTmCDBPEQ" type="3024" element="_UTBcMNSsEeyDluTmCDBPEQ">
          <children xmi:type="notation:DecorationNode" xmi:id="_UTEfgNSsEeyDluTmCDBPEQ" type="5021"/>
          <styles xmi:type="notation:DescriptionStyle" xmi:id="_UTD4cdSsEeyDluTmCDBPEQ"/>
          <styles xmi:type="notation:FontStyle" xmi:id="_UTD4ctSsEeyDluTmCDBPEQ" fontName="Segoe UI"/>
          <styles xmi:type="notation:FillStyle" xmi:id="_UTD4c9SsEeyDluTmCDBPEQ"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_UTD4dNSsEeyDluTmCDBPEQ" x="28" y="112"/>
        </children>
        <children xmi:type="notation:Node" xmi:id="_V9YFMNSsEeyDluTmCDBPEQ" type="3023" element="_V9WQANSsEeyDluTmCDBPEQ">
          <children xmi:type="notation:DecorationNode" xmi:id="_V9YsQNSsEeyDluTmCDBPEQ" type="5020"/>
          <styles xmi:type="notation:DescriptionStyle" xmi:id="_V9YFMdSsEeyDluTmCDBPEQ"/>
          <styles xmi:type="notation:FontStyle" xmi:id="_V9YFMtSsEeyDluTmCDBPEQ" fontName="Segoe UI"/>
          <styles xmi:type="notation:FillStyle" xmi:id="_V9YFM9SsEeyDluTmCDBPEQ"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_V9YFNNSsEeyDluTmCDBPEQ" x="129" y="112" width="196" height="24"/>
        </children>
        <children xmi:type="notation:Node" xmi:id="_Z4EZItSsEeyDluTmCDBPEQ" type="3024" element="_Z4EZINSsEeyDluTmCDBPEQ">
          <children xmi:type="notation:DecorationNode" xmi:id="_Z4EZJ9SsEeyDluTmCDBPEQ" type="5021"/>
          <styles xmi:type="notation:DescriptionStyle" xmi:id="_Z4EZI9SsEeyDluTmCDBPEQ"/>
          <styles xmi:type="notation:FontStyle" xmi:id="_Z4EZJNSsEeyDluTmCDBPEQ" fontName="Segoe UI"/>
          <styles xmi:type="notation:FillStyle" xmi:id="_Z4EZJdSsEeyDluTmCDBPEQ"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_Z4EZJtSsEeyDluTmCDBPEQ" x="28" y="154"/>
        </children>
        <children xmi:type="notation:Node" xmi:id="_iyxDRdSsEeyDluTmCDBPEQ" type="3010" element="_iyxDQNSsEeyDluTmCDBPEQ">
          <children xmi:type="notation:DecorationNode" xmi:id="_iyxDStSsEeyDluTmCDBPEQ" type="5007"/>
          <styles xmi:type="notation:DescriptionStyle" xmi:id="_iyxDRtSsEeyDluTmCDBPEQ"/>
          <styles xmi:type="notation:FontStyle" xmi:id="_iyxDR9SsEeyDluTmCDBPEQ" fontName="Segoe UI"/>
          <styles xmi:type="notation:LineStyle" xmi:id="_iyxDSNSsEeyDluTmCDBPEQ"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_iyxDSdSsEeyDluTmCDBPEQ" x="277" y="156"/>
        </children>
        <children xmi:type="notation:Node" xmi:id="_00DB8tStEeyDluTmCDBPEQ" type="3005" element="_00DB8NStEeyDluTmCDBPEQ">
          <children xmi:type="notation:DecorationNode" xmi:id="_00DB99StEeyDluTmCDBPEQ" type="5025"/>
          <children xmi:type="notation:BasicCompartment" xmi:id="_00DB-NStEeyDluTmCDBPEQ" type="7005">
            <children xmi:type="notation:Node" xmi:id="_00ft4NStEeyDluTmCDBPEQ" type="3012" element="_00V88tStEeyDluTmCDBPEQ">
              <children xmi:type="notation:DecorationNode" xmi:id="_00ft5dStEeyDluTmCDBPEQ" type="5010"/>
              <children xmi:type="notation:DecorationNode" xmi:id="_00ft5tStEeyDluTmCDBPEQ" visible="false" type="7008">
                <styles xmi:type="notation:SortingStyle" xmi:id="_00ft59StEeyDluTmCDBPEQ"/>
                <styles xmi:type="notation:FilteringStyle" xmi:id="_00ft6NStEeyDluTmCDBPEQ"/>
              </children>
              <styles xmi:type="notation:DescriptionStyle" xmi:id="_00ft4dStEeyDluTmCDBPEQ"/>
              <styles xmi:type="notation:FontStyle" xmi:id="_00ft4tStEeyDluTmCDBPEQ" fontName="Segoe UI"/>
              <styles xmi:type="notation:FillStyle" xmi:id="_00ft49StEeyDluTmCDBPEQ"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_00ft5NStEeyDluTmCDBPEQ" x="29" y="1" width="120" height="24"/>
            </children>
          </children>
          <styles xmi:type="notation:DescriptionStyle" xmi:id="_00DB89StEeyDluTmCDBPEQ"/>
          <styles xmi:type="notation:FontStyle" xmi:id="_00DB9NStEeyDluTmCDBPEQ" fontName="Segoe UI"/>
          <styles xmi:type="notation:FillStyle" xmi:id="_00DB9dStEeyDluTmCDBPEQ"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_00DB9tStEeyDluTmCDBPEQ" x="22" y="8" width="184" height="71"/>
        </children>
        <children xmi:type="notation:Node" xmi:id="_TTjiQNS3EeyDluTmCDBPEQ" type="3023" element="_TThGANS3EeyDluTmCDBPEQ">
          <children xmi:type="notation:DecorationNode" xmi:id="_TTlXcNS3EeyDluTmCDBPEQ" type="5020"/>
          <styles xmi:type="notation:DescriptionStyle" xmi:id="_TTjiQdS3EeyDluTmCDBPEQ"/>
          <styles xmi:type="notation:FontStyle" xmi:id="_TTjiQtS3EeyDluTmCDBPEQ" fontName="Segoe UI"/>
          <styles xmi:type="notation:FillStyle" xmi:id="_TTjiQ9S3EeyDluTmCDBPEQ"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_TTjiRNS3EeyDluTmCDBPEQ" x="129" y="156"/>
        </children>
        <children xmi:type="notation:Node" xmi:id="_bcgfANS6EeyDluTmCDBPEQ" type="3012" element="_bcep0NS6EeyDluTmCDBPEQ">
          <children xmi:type="notation:DecorationNode" xmi:id="_bchGENS6EeyDluTmCDBPEQ" type="5010"/>
          <children xmi:type="notation:DecorationNode" xmi:id="_bchGEdS6EeyDluTmCDBPEQ" type="7008">
            <styles xmi:type="notation:SortingStyle" xmi:id="_bchGEtS6EeyDluTmCDBPEQ"/>
            <styles xmi:type="notation:FilteringStyle" xmi:id="_bchGE9S6EeyDluTmCDBPEQ"/>
          </children>
          <styles xmi:type="notation:DescriptionStyle" xmi:id="_bcgfAdS6EeyDluTmCDBPEQ"/>
          <styles xmi:type="notation:FontStyle" xmi:id="_bcgfAtS6EeyDluTmCDBPEQ" fontName="Segoe UI"/>
          <styles xmi:type="notation:FillStyle" xmi:id="_bcgfA9S6EeyDluTmCDBPEQ"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_bcgfBNS6EeyDluTmCDBPEQ" x="22" y="200"/>
        </children>
      </children>
      <styles xmi:type="notation:DescriptionStyle" xmi:id="_zHd2QdSrEeyDluTmCDBPEQ"/>
      <styles xmi:type="notation:FontStyle" xmi:id="_zHd2QtSrEeyDluTmCDBPEQ" fontName="Segoe UI"/>
      <styles xmi:type="notation:FillStyle" xmi:id="_zHd2Q9SrEeyDluTmCDBPEQ"/>
      <layoutConstraint xmi:type="notation:Bounds" xmi:id="_zHd2RNSrEeyDluTmCDBPEQ" x="-2" width="416" height="344"/>
    </children>
    <styles xmi:type="notation:DiagramStyle" xmi:id="_yMYuENSrEeyDluTmCDBPEQ"/>
  </notation:Diagram>
</xmi:XMI>
